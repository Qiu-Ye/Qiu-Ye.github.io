<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qiuye</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qiu-ye.github.io/"/>
  <updated>2018-04-04T03:40:15.715Z</updated>
  <id>https://qiu-ye.github.io/</id>
  
  <author>
    <name>Qiuye</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux开机启动流程</title>
    <link href="https://qiu-ye.github.io/2018/04/04/Linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/>
    <id>https://qiu-ye.github.io/2018/04/04/Linux开机启动流程/</id>
    <published>2018-04-04T03:36:31.000Z</published>
    <updated>2018-04-04T03:40:15.715Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180404111232284.png" alt=""></p><p>ψ(._. )&gt;</p><hr><p>Linux系统开机流程</p><a id="more"></a><h3 id="Linux系统开机流程："><a href="#Linux系统开机流程：" class="headerlink" title="Linux系统开机流程："></a>Linux系统开机流程：</h3><h4 id="BIOS：Basic-Input-Output-System"><a href="#BIOS：Basic-Input-Output-System" class="headerlink" title="BIOS：Basic Input Output System"></a>BIOS：Basic Input Output System</h4><p>电源开启，首先登场的是BIOS，即标准输入输出系统，它是电脑最开始执行的程序。它将执行以下步骤：</p><ul><li>读取CMOS中的信息：了解计算机的硬件情况。例如：<ul><li>CPU的总线时钟</li><li>启动设备的搜索顺序</li><li>硬盘大小与型号</li><li>系统时间</li><li>即插即用设备</li><li>各设备的IO地址</li><li>中断请求等……</li></ul></li><li>POST：加电自检。例如：<ul><li>确定可用的内存</li><li>确定时钟速度等……</li></ul></li><li>对硬件进行初始化，设定即插即用设备。<ul><li>有过重装系统经验的同学，会对此步骤有深切的理解。</li><li>重装系统或者需要使用WinPE工具时，要把制作好的U盘启动盘在开机之前插入USB口。</li><li>U盘启动盘此时即作为即插即用设备被识别、读取和设定。</li></ul></li><li>BOOT Sequence：按次序查找引导设备。<ul><li>第一个有引导程序的设备即为本次启动要用到的设备。</li><li>系统默认的启动顺序中本地硬盘通常是最靠前的，而BIOS会总是启动第一个有引导程序的设备。</li><li>因此，如果想加载启动U盘或者光盘中的系统，就要调整其启动顺序排在本地硬盘前面。</li></ul></li><li>从启动设备中读取MBR，并将控制权移交给MBR中的程序。</li></ul><h4 id="MBR：Master-Boot-Reord-主引导记录区"><a href="#MBR：Master-Boot-Reord-主引导记录区" class="headerlink" title="MBR：Master Boot Reord 主引导记录区"></a>MBR：Master Boot Reord 主引导记录区</h4><p>主引导记录区是位于整个硬盘的0磁道0柱面的第一个扇区，只有512个字节，它是由引导加载代码区、磁盘分区表和引导记录标识组成。</p><ul><li>引导加载代码区（Master Boot Code）：<ul><li>只有446字节大小</li><li>用于存放引导加载程序，即Bootloader，也就是说Bootloader能使用的最大空间为446字节。</li></ul></li><li>磁盘分区表（Disk Partition Table）:<ul><li>共有64字节大小</li><li>每个分区需要16个字节描述，硬盘分区表只能描述4个主分区，因此一块磁盘最多只有4个主分区。</li><li>如果需要更多分区就要将一个（或多个）主分区作为扩展分区。</li><li>要注意的是扩展分区是不能直接用作存储的，扩展分区也是主分区的一种，它必须至少包含一个逻辑分区，逻辑分区可以直接用于存储。</li></ul></li><li>引导记录标识（Boot Record ID）:<ul><li>2字节大小</li><li>0x55AA</li></ul></li></ul><p>这里面最重要当属Bootloader——引导加载器，它是在操作系统内核运行之前运行的一小段程序，负责将操作系统内核装入内存，然后将计算机控制权交给操作系统。Windows系统使用的BootLoader叫做ntloader。早期的Linux发行版上，普遍采用的Bootloader是LILO（LInux LOader），后来GRUB诞生了，以其强大的功能毫不留情地代替了LILO的位置。目前使用最广泛的GRUB（GRand Uniform Bootloader）全称应该是是GNU GRUB，现在已经更新到第二代，需要注意的是GRUB2相较于GRUB几乎完全重写，其优势主要表现在以下几点：</p><ol><li>GRUB是动态可配置的。</li><li>GRUB提供菜单供用户选择要启动的操作系统。</li><li>GRUB支持操作系统非常广泛。不但支持所有的Liunx，还能通过链式启动功能支持Windows和OS/2。</li><li>GRUB具有多种形式的用户界面。支持图形界面，能提供带有漂亮背景的启动菜单</li><li>GRUB拥有丰富的控制台命令与用户交互。</li><li>GRUB可以从镜像文件中启动操作系统。</li><li>GRUB支持链式启动。</li><li>GRUB支持多种语言，包括中文。</li></ol><p>GRUB使用三段式引导启动，引导流程如下：</p><ul><li>第一段：位于MBR中的Bootloader区，此阶段产生一个名为<strong>stage1</strong>的文件</li><li>第二段：位于紧接在MBR后面的位置，大概30K左右的代码，主要是文件系统的驱动程序，目的是找到第三段生成的主功能代码文件，此阶段产生一个名为<strong>stage1_5</strong>的文件。</li><li>第三段：位于磁盘上，位置不确定，放置GRUB的主功能代码，用于实现GRUB支持的所有功能，此阶段产生一个名为<strong>stage2</strong>的文件。</li></ul><p>GRUB2使用四段式引导启动,要求必须提供1M的空白空间用于存放其核心代码，位置不限但必须位于2T空间以内，引导流程如下：</p><ul><li>第一段：位于MBR中的Bootloader区，此阶段代码文件名为<strong>boot.img</strong></li><li>第二段：位于存放GRUB2核心文件core.img的第一个扇区，大小为512字节，作用是将核心文件core.img余下的部分读入内存，此阶段代码文件名为<strong>diskboot.img</strong></li><li>第三段：加载GRUB2的内核模块</li><li>第四段：启动操作界面，供用户选择需要启动的操作系统。</li></ul><p>用户在GRUB的操作界面不仅可以选择要启动的内核或操作系统，还可以传递给内核启动参数，之后，就开始加载用户选择的内核或操作系统。</p><h4 id="Kernel：加载内核"><a href="#Kernel：加载内核" class="headerlink" title="Kernel：加载内核"></a>Kernel：加载内核</h4><p>内核镜像通常为bzImage的压缩格式，被加载到内存后先要进行自解压，之后跳转到startup_32函数。<br>startup_32函数的执行代表着Linux第一个进程的开始，进行一番整理操作后便跳到Linux内核的主函数start_kernel。<br>start_kernel函数执行过程中大部分时间都在为Linux内核准备必要的数据结构，以保证子模块的正常运行。完成数据结构初始化后，start_kernel会创建一个名为kernel_init的内核进程，然后进入死循环cpu_idle函数中（此进程的PID为0，主要工作就是调用CPU的idle指令，让CPU降温且省电）。<br>kernel_init的主要工作有以下几点：</p><ul><li>给硬件加载驱动程序</li><li>初始化网络堆栈</li><li>在多CPU的系统中让其他CPU开始工作</li><li>寻找并以只读方式挂载用户指定的根文件系统</li><li>当一切准备工作完成后，kernel_init会调用用户空间的第一个进程——/sbin/init。</li></ul><p>需要注意的是在加载硬件驱动的时候，有可能会借助于ramdisk加载驱动，这一过程在CentOS 5和CentOS 6中体现为不同的流程。CentOS 5中的ramdisk可能会被缓存两次，在CentOS 6中改为文件系统ramfs。</p><ul><li>CentOS 5：initrd，initrd在内存中开辟一块模拟的磁盘空间，Linux内核启动后，先将这个模拟的磁盘当作根文件系统，并执行initrd中的/linuxrc文件，开始加载那些内核要访问的真正的根文件系统所必需的驱动并挂接真正的根文件系统。之后从根分区中启动init进程</li><li>CentOS 6：initramfs，initramfs是一个使用gzip压缩的cpio打包文件。Linux内核将它的内容装入tmpfs，这就不需要附带任何文件驱动就能工作，并且tmpfs支持动态扩展。之后，initramfs直接启动init进程。根分区中的init程序作为备份，在没有initramfs的时候，内核才会挂接分区去找它。</li></ul><h4 id="init："><a href="#init：" class="headerlink" title="init："></a>init：</h4><p>init进程的执行基本标志着开机流程走到了最后一站，init进程会根据用户设定的运行级别对Linux系统进行一系列的初始化操作。比如：启动对应运行级别的服务进程、配置网络、继续为某些硬件加载驱动程序、运行相关软件等。但init进程不单单是做初始化，从系统的启动，一直到关机，init都在守护着系统的运行。随着技术的迭代，init程序在历史上有着许多个不同的身份：</p><ul><li>SysV：init，CentOS 5及之前的版本<ul><li>配置文件：/etc/inittab</li><li>流程：<ul><li>/sbin/init –&gt; (/etc/inittab) –&gt; 设置默认运行级别 –&gt; 运行系统初始化脚本、完成系统初始化（/etc/rc.d/rc.sysinit） –&gt; 关闭对应的需要关闭的服务，启动需要启动的服务 –&gt; 设置登陆终端</li></ul></li><li>系统初始化脚本：/etc/rc.d/rc.sysinit<ul><li>设置主机名</li><li>设置欢迎信息</li><li>激活udev和selinux</li><li>挂载/etc/fstab文件中定义的文件系统</li><li>检测根文件系统，并以读写方式重新挂载根文件系统</li><li>设置系统时钟</li><li>激活swap设备</li><li>根据/etc/sysctl.conf文件设置内核参数</li><li>激活lvm及software raid设备</li><li>加载额外设备的驱动程序</li><li>清理操作</li></ul></li></ul></li><li>Upstart：init，CentOS 6，支持并行启动<ul><li>配置文件：/etc/inittab，/etc/init/*.conf</li></ul></li><li>Systemd：systemd，CentOS 7，<ul><li>配置文件：/usr/lib/systemd/system，/etc/systemd/system</li><li>systemd新特性<ul><li>系统引导时实现服务并行启动</li><li>按需激活进程<ul><li>基于socket的激活机制，socket与服务程序分离</li><li>基于bus的激活机制</li><li>基于device的激活机制</li><li>基于path的激活机制</li></ul></li><li>系统状态快照<ul><li>保存各unit的当前状态信息于持久存储设备中</li><li>向后兼容sysv init脚本</li></ul></li><li>基于依赖关系定义服务控制逻辑</li></ul></li></ul></li></ul><hr><p>完结撒花~撒花~<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180404111232284.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;ψ(._. )&amp;gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Linux系统开机流程&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="GRUB" scheme="https://qiu-ye.github.io/tags/GRUB/"/>
    
  </entry>
  
  <entry>
    <title>linux-3.10.67内核编译</title>
    <link href="https://qiu-ye.github.io/2018/03/09/linux-3-10-67%E5%86%85%E6%A0%B8%E7%BC%96%E8%AF%91/"/>
    <id>https://qiu-ye.github.io/2018/03/09/linux-3-10-67内核编译/</id>
    <published>2018-03-09T01:22:07.000Z</published>
    <updated>2018-03-09T01:51:06.267Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p>The Kernel is the cornerstone！</p><hr><p><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-2018030909314328.png" alt="0"></p><a id="more"></a><h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><p>以编译Linux-2.6.32-504内核参数设置为模板，进行linux-3.10.67内核编译。</p><h3 id="操作平台"><a href="#操作平台" class="headerlink" title="操作平台"></a>操作平台</h3><ul><li>VMware Workstation 8.0</li><li>CentOS 6.6<ul><li>Kernel：2.6.32-504.el6.x86_64</li></ul></li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>准备好开发环境<ul><li>包组（CentOS 6）<ul><li>Server Platform Development</li><li>Develop Tool</li></ul></li></ul></li><li>获取目标主机硬件设备的相关信息<ul><li>CPU：<ul><li>cat /proc/cpuinfo</li><li>x86info -a</li><li>lscpu</li></ul></li><li>PCI设备<ul><li>lspci</li><li>lsusb</li><li>hal-device：了解全部硬件设备信息</li></ul></li></ul></li><li>获取到目标主机系统功能的相关信息，例如要使用的文件系统</li><li>获取内核源代码包<ul><li>linux-3.10.67.tar.xz</li></ul></li></ul><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ul><li><code>tar xf linux-3.10.67.tar.xz -C /usr/src</code>：将源码解压至/usr/src</li><li><code>ln -sv /usr/src/linux-3.10.67 /usr/src/linux</code></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308145057627.png" alt="1"></li><li><code>cd /usr/src/linux</code>：进入源码目录</li><li><code>cp /boot/config-2.6.32-504.el6.x86_64 .config</code>：复制现有的系统内核配置文件作为模板备用</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308145648842.png" alt="2"></li><li><code>make menuconfig</code>：启动图形界面配置内核参数，按照需求安装<ul><li>如果报错，则需安装ncurses：<code>yum install ncurses-devel.x86_64</code></li></ul></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308214218106.png" alt=""></li><li><code>screen</code>：开启一个虚拟屏幕，以防止编译过程中ssh断开连接，导致编译失败<ul><li><code>Ctrl+a，d</code>快捷键可以切出虚拟屏幕，即使关闭ssh连接，屏幕中运行的编译任务仍不会断开</li><li><code>screen -ls</code>：列出正在运行的虚拟屏幕ID号</li><li><code>screen -r #</code>：重新呼出ID号为#的虚拟屏幕</li></ul></li><li><code>make -j #</code>：在虚拟屏幕下编译，采用多核编译可以缩短编译时间</li><li><code>make modules_install</code></li><li><code>make install</code></li><li>重启系统，并测试使用新内核</li><li>完结撒花~撒花~<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h3&gt;&lt;p&gt;The Kernel is the cornerstone！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-2018030909314328.png&quot; alt=&quot;0&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="Kernel" scheme="https://qiu-ye.github.io/tags/Kernel/"/>
    
  </entry>
  
  <entry>
    <title>CentOS6.6安装Ohmyzsh时的报错问题</title>
    <link href="https://qiu-ye.github.io/2018/03/09/CentOS6.6%E5%AE%89%E8%A3%85Ohmyzsh%E6%97%B6%E7%9A%84%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98/"/>
    <id>https://qiu-ye.github.io/2018/03/09/CentOS6.6安装Ohmyzsh时的报错问题/</id>
    <published>2018-03-09T01:10:23.000Z</published>
    <updated>2018-03-09T01:51:23.195Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p>“oh-my-zsh is among the first things i install on any new machine I set up. It’s as necessary as the shell itself.”</p><hr><p>问：Liunx发行版安装完成后做的第一件事是什么？<br>答：当然是配置zsh+ohmysh。b(￣▽￣)d</p><a id="more"></a><h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><p>解决CentOS 6.6 安装成功后，配置zsh+Ohmyzsh失败的问题。</p><h3 id="操作平台"><a href="#操作平台" class="headerlink" title="操作平台"></a>操作平台</h3><ul><li>VMware Workstation 8.0</li><li>CentOS 6.6<ul><li>Kernel：2.6.32-504.el6.x86_64</li></ul></li></ul><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ul><li><code>yum install zsh</code></li><li><code>chsh -s /bin/zsh</code></li><li><code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code><ul><li>报错：fatal: HTTP request failed</li><li>原因：CentOS 6.6 开机自带的git版本为1.7.1，版本过低</li><li>解决方法：将git升级为2.2.1版本<ul><li><code>yum remove git</code></li><li><code>wget https://github.com/git/git/archive/v2.2.1.tar.gz</code></li><li><code>tar zxvf v2.2.1.tar.gz</code></li><li><code>cd git-2.2.1</code></li><li><code>make configure</code></li><li><code>./configure --prefix=/usr/local/git --with-iconv=/usr/local/libiconv</code></li><li><code>make install</code></li><li><code>echo &quot;export PATH=$PATH:/usr/local/git/bin&quot; &gt;&gt; /etc/bashrc</code></li><li><code>source /etc/bashrc</code></li><li><code>git --version</code></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308211910791.png" alt="1"></li></ul></li></ul></li><li><code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code><ul><li>报错：fatal: HTTP request failed</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308212054828.png" alt="2"></li><li>原因：nss需要更新</li><li>解决方法：更新nss<ul><li><code>yum update nss</code></li></ul></li></ul></li><li><code>sh -c &quot;$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></li><li>呼~终于不再报错了ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308212433752.png" alt="3"></li><li>安装成功，完结撒花~撒花~<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h3&gt;&lt;p&gt;“oh-my-zsh is among the first things i install on any new machine I set up. It’s as necessary as the shell itself.”&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;问：Liunx发行版安装完成后做的第一件事是什么？&lt;br&gt;答：当然是配置zsh+ohmysh。b(￣▽￣)d&lt;/p&gt;
    
    </summary>
    
      <category term="系统优化" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="ZSH" scheme="https://qiu-ye.github.io/tags/ZSH/"/>
    
  </entry>
  
  <entry>
    <title>使用GRUB工具修复被损坏的MBR</title>
    <link href="https://qiu-ye.github.io/2018/03/08/%E4%BD%BF%E7%94%A8GRUB%E5%B7%A5%E5%85%B7%E4%BF%AE%E5%A4%8D%E6%8D%9F%E5%9D%8F%E7%9A%84MBR/"/>
    <id>https://qiu-ye.github.io/2018/03/08/使用GRUB工具修复损坏的MBR/</id>
    <published>2018-03-08T02:49:22.000Z</published>
    <updated>2018-03-09T01:52:04.107Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><blockquote><p>Family always bless you without any conditions!<br>                               —— 《COCO》 from Pixar</p></blockquote><hr><p>对于操作系统来说，<br>系统安装盘就是它永远的家。<br>系统动不起来，<br>找妈妈（系统盘）就对了。</p><a id="more"></a><h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><p>使用GRUB工具修复损坏的MBR</p><h3 id="操作平台"><a href="#操作平台" class="headerlink" title="操作平台"></a>操作平台</h3><ul><li>VMware Workstation 8.0</li><li>CentOS 6.6<ul><li>Kernel：2.6.32-504.el6.x86_64</li></ul></li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>备份系统盘的MBR<ul><li><code>dd if=/dev/sda of=/root/mbr.bak count=1 bs=512</code></li></ul></li><li>破坏MBR，注意不要破坏分区表<ul><li><code>dd if=/dev/zero of=/dev/sda count=1 bs=200</code>：bs值一定不要大于446</li></ul></li><li><code>sync</code></li></ul><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><strong>手动修复（使用条件：MBR被破坏后仍在系统中）</strong><ul><li>方法一：<ul><li><code>grub-install --root-directory=/ /dev/sda</code>：安装gurb，恢复MBR</li><li><code>sync</code></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308102240847.png" alt=""></li></ul></li><li>方法二：<ul><li><code>grub</code></li><li>grub&gt; <code>root (hd0,0)</code>：指定MBR所在的磁盘分区</li><li>grub&gt; <code>setup （hd0）</code>：安装GRUB</li><li><code>sync</code></li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308102507264.png" alt=""></li></ul></li></ul></li><li><strong>救援模式修复（使用条件：MBR被破坏后无法进入系统）</strong><ul><li>载入安装光盘</li><li>启动系统进入系统安装界面<ul><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308102636475.png" alt=""></li></ul></li><li>进入救援模式<ul><li>选择<code>Rescue installed system</code>选项</li><li>或在命令行模式下（esc键），键入<code>linux rescue</code></li><li>ψ(._. )&gt; <img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308102726405.png" alt=""></li></ul></li><li>前面的设置略过不表<ul><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308102858401.png" alt=""></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308102933281.png" alt=""></li></ul></li><li>Start shell<ul><li><code>chroot /mnt/sysimage</code>：原来系统根目录被挂载至救援模式下的/mnt/sysimage，做根切换</li><li><code>grub-install --root-directory=/ /dev/sda</code>：安装gurb，恢复MBR</li><li><code>exit</code>：退回到原来的根目录</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308103139195.png" alt="e"></li><li><code>reboot</code>：重启时记得把安装光盘卸载</li></ul></li></ul></li><li><strong>此时系统即可正常启动！完结撒花~撒花~<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</strong><ul><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180308103441244.png" alt=""></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Family always bless you without any conditions!&lt;br&gt;                               —— 《COCO》 from Pixar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;对于操作系统来说，&lt;br&gt;系统安装盘就是它永远的家。&lt;br&gt;系统动不起来，&lt;br&gt;找妈妈（系统盘）就对了。&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="GRUB" scheme="https://qiu-ye.github.io/tags/GRUB/"/>
    
  </entry>
  
  <entry>
    <title>对空白磁盘进行内核引导</title>
    <link href="https://qiu-ye.github.io/2018/03/08/%E5%AF%B9%E7%A9%BA%E7%99%BD%E7%A3%81%E7%9B%98%E8%BF%9B%E8%A1%8C%E5%86%85%E6%A0%B8%E5%BC%95%E5%AF%BC/"/>
    <id>https://qiu-ye.github.io/2018/03/08/对空白磁盘进行内核引导/</id>
    <published>2018-03-08T01:01:26.000Z</published>
    <updated>2018-03-09T01:52:12.611Z</updated>
    
    <content type="html"><![CDATA[<h3 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h3><p>God said,”Let there be light,”and there was light.</p><hr><p>内核躺在磁盘中呼呼大睡<br>管理员叫过来GRUB说<br>“去，把世界唤醒”<br>内核伸了个懒腰<br>招呼它的小兄弟忙碌起来<br>于是<br>整个二进制世界五彩斑斓</p><a id="more"></a><h3 id="任务描述"><a href="#任务描述" class="headerlink" title="任务描述"></a>任务描述</h3><p>为一块空白磁盘制作单独运行bash的Linux系统</p><h3 id="操作平台"><a href="#操作平台" class="headerlink" title="操作平台"></a>操作平台</h3><ul><li>VMware Workstation 8.0</li><li>CentOS 6.6<ul><li>Kernel：2.6.32-504.el6.x86_64</li></ul></li></ul><h3 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h3><ol><li><p><strong>为虚拟机中的CentOS 6.6系统添加一块3G大小的空白磁盘</strong></p><ul><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307214133104.png" alt="1"></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-2018030721423181.png" alt="2"></li></ul></li><li><p><strong>启动CentOS 6.6系统，为空白磁盘分区。</strong></p><ul><li>查看新添加的磁盘标识符：<ul><li><code>fdisk -l</code>：列出所有磁盘状况</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307215155333.png" alt="3"></li></ul></li><li>将/dev/sdb磁盘分成三个区：<ul><li><code>fdisk /dev/sdb</code>：磁盘分区操作<ul><li>/dev/sdb1：计划作为<code>/boot</code>分区，分配空间100M</li><li>/dev/sdb2：计划作为<code>swap</code>分区，分配空间900M（注：由于添加的磁盘总容量较小，没有按照常规标准分配swap空间）</li><li>/dev/sdb3：计划作为<code>/</code>分区,分配1G空间</li></ul></li><li><code>partx -a /dev/sdb</code>：通知内核重新读取硬盘分区表</li><li><code>cat /proc/partitions</code>：查看内核是否已经识别新的分区</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307220455909.png" alt="4"></li></ul></li><li>向/dev/sdb磁盘中的分区写入文件系统：<ul><li><code>mke2fs -t ext4 /dev/sdb1</code>：/boot，文件系统 ext4</li><li><code>mkswap /dev/sdb2</code>：swap</li><li><code>mke2fs -t ext4 /dev/sdb1</code>：/，文件类型 ext4</li><li><code>fdisk -l /dev/sdb</code></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307222217886.png" alt="5"></li></ul></li></ul></li><li><strong>为新磁盘安装grub</strong><ul><li><code>mkdir /mnt/boot</code>：创建挂载点</li><li><code>mount /dev/sdb1 /mnt/boot</code>：将/dev/sdb1挂载至挂载点</li><li><code>grub-install --root-directory=/mnt /dev/sdb</code>：安装grub，指定grub的根目录为/mnt，grub-install会自动寻找boot/目录</li><li><code>ll /mnt/boot/grub</code>：grub安装命令在boot/下生成grub目录</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307223648432.png" alt="6"></li><li><code>cp /boot/vmlinuz-2.6.32-504.el6.x86_64 /mnt/boot/vmlinuz</code>：复制系统内核文件至新磁盘boot/中</li><li><code>cp /boot/initramfs-2.6.32-504.el6.x86_64.img /mnt/boot/initramfs.img</code>：复制initramfs文件至新磁盘boot/中</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307224413424.png" alt="7"></li><li><code>vim /mnt/boot/grub/grub.conf</code>：编写grub配置文件</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307233448449.png" alt=""></li></ul></li><li><strong>为新磁盘创建bash运行环境</strong><ul><li><code>mkdir /mnt/sysroot</code>：创建新磁盘的根分区挂载点</li><li><code>mount /dev/sdb3 /mnt/sysroot</code>：挂载新磁盘根分区</li><li><code>cd /mnt/sysroot</code>：</li><li><code>mkdir -pv bin dev etc home lib lib64 media mnt proc root sbin sys tmp usr var</code>：在新磁盘根下创建根目录（其实没必要创建那么多啦b(￣▽￣)d）</li><li><code>ll /mnt/sysroot</code>：（因为多创建点可以以假乱真呀！(✿◡‿◡)）</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307230223320.png" alt="9"></li><li><code>cp /bin/bash /mnt/sysroot/bin</code>：复制/bin/bash到新磁盘根目录下的/bin</li><li><code>ldd /bin/bash</code>：不要忘了/bin/bash运行所依赖的库文件</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307231123243.png" alt="10"></li><li><code>cp /lib64/libtinfo.so.5 /mnt/sysroot/lib64</code>：将库文件复制到新磁盘根目录下<strong>与之对应的</strong>目录中</li><li><code>cp /lib64/libdl.so.2 /mnt/sysroot/lib64</code></li><li><code>cp /lib64/libc.so.6 /mnt/sysroot/lib64</code></li><li><code>cp /lib64/ld-linux-x86-64.so.2 /mnt/sysroot/lib64</code></li><li><code>sync</code>：同步保存文件</li></ul></li><li><strong>接下来就是检验成果的时刻了</strong><ul><li>新建一个Linux虚拟机。<ul><li>注意：选择磁盘的时候，使用已存在的虚拟磁盘，尤其注意磁盘名要选对。</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307232156708.png" alt="11"></li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307232449947.png" alt="12"></li></ul></li><li>启动在空白磁盘中新建的虚拟机<ul><li>进入grub引导界面</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307232814696.png" alt="13"></li><li>点击e键进入编辑模式</li><li>ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307233617184.png" alt="14"></li><li>点击b键启动系统</li><li>bash启动成功 ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307233709367.png" alt="15"></li><li>可正常执行bash自带命令 ψ(._. )&gt;</li><li><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-20180307234033999.png" alt="16"></li></ul></li></ul></li><li><strong>大功告成！完结撒花~撒花~<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</strong></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h3&gt;&lt;p&gt;God said,”Let there be light,”and there was light.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;内核躺在磁盘中呼呼大睡&lt;br&gt;管理员叫过来GRUB说&lt;br&gt;“去，把世界唤醒”&lt;br&gt;内核伸了个懒腰&lt;br&gt;招呼它的小兄弟忙碌起来&lt;br&gt;于是&lt;br&gt;整个二进制世界五彩斑斓&lt;/p&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="GRUB" scheme="https://qiu-ye.github.io/tags/GRUB/"/>
    
  </entry>
  
  <entry>
    <title>Linux进程及作业管理</title>
    <link href="https://qiu-ye.github.io/2018/03/06/Linux%E8%BF%9B%E7%A8%8B%E5%8F%8A%E4%BD%9C%E4%B8%9A%E7%AE%A1%E7%90%86/"/>
    <id>https://qiu-ye.github.io/2018/03/06/Linux进程及作业管理/</id>
    <published>2018-03-06T00:45:37.000Z</published>
    <updated>2018-03-06T00:59:07.168Z</updated>
    
    <content type="html"><![CDATA[<h3 id="进程相关概念"><a href="#进程相关概念" class="headerlink" title="进程相关概念"></a>进程相关概念</h3><ul><li><strong>进程：</strong><ul><li>处于运行状态的程序副本</li><li>正在执行的程序代码的实时结果</li><li>处于执行期的程序以及相关资源的总称</li></ul></li><li><p><strong>线程：</strong></p><ul><li>在进程中活动的对象</li><li>每个线程都拥有一个独立的程序计数器、进程栈和一组进程寄存器</li><li>是内核调度的对象</li></ul></li><li><p>同一个进程中的线程之间可以共享虚拟内存，但每个线程都拥有各自的虚拟处理器。</p></li><li>Windows和Solaris系统都在内核中提供了专门支持线程的机制，这些系统常常把线程称作轻量级进程，相较于重量级的进程，线程被抽象成一种耗费较少资源，运行迅速的执行单元。而对于Linux来说，它只是一种进程间共享资源的手段。</li></ul><a id="more"></a><ul><li>task struct：Linux内核存储进程信息的固定格式</li><li>task list：多个任务的task struct组成的链表</li><li>进程创建<ul><li>init</li><li>进程都由其父进程创建<ul><li>fork()</li><li>clone()</li></ul></li></ul></li><li>进程的调度<ul><li>进程优先级<ul><li>0-139：<ul><li>1-99：实时优先级</li><li>100-139：静态优先级<ul><li>数字越小，优先级越高</li></ul></li></ul></li><li>Nice值：<ul><li>-20，19</li></ul></li></ul></li><li>进程内存<ul><li>Page Frame：页框，用于存储页面数据</li><li>虚拟内存实现机制<ul><li>线性地址空间：每个进程都认为自己有3G内存可用</li><li>物理地址空间：处于内存不同位置的空闲的页，由内核映射为线性地址空间</li></ul></li><li>MMU：Memory Management Unit</li><li>缺页异常：进程访问的数据不存在，向内核申请从磁盘载入</li><li>常驻内存集</li><li>虚拟内存集：可被交换出去的内存集</li></ul></li><li>进程间通信：IPC-Inter Process Communication<ul><li>同一主机：<ul><li>signal</li><li>shm：shared memory</li><li>semerphor</li></ul></li><li>不同主机：<ul><li>rpc：remote procecure call</li><li>socket</li></ul></li></ul></li><li>进程类型<ul><li>守护进程：daemon，在系统引导过程中启动的进程，跟终端无关的进程</li><li>前台进程：和终端相关，通过终端启动的进程</li><li>注意：也可以把前台启动的进程送往后台，以守护模式运行</li></ul></li><li>进程状态<ul><li>运行态：running</li><li>就绪态：ready</li><li>睡眠态<ul><li>可中断：interruptable</li><li>不可中断：uninterruptable</li></ul></li><li>停止态：stopped，暂停于内存中，但不会被调度，除非被手动启动</li><li>僵死态：zombie</li></ul></li><li>进程的分类：<ul><li>CPU-Bound：一般属于非交互式进程</li><li>IO-Bound：一般属于交互式进程</li></ul></li><li>推荐两本Linux内核的书：《Linux内核设计与实现》《深入理解Linux内核》</li><li>Linux内核：抢占式多任务</li><li>IO过程<ol><li>从磁盘中把数据加载至内核内存</li><li>把数据从内核内存复制到进程内存中去</li></ol></li></ul></li></ul><h3 id="进程及作业管理"><a href="#进程及作业管理" class="headerlink" title="进程及作业管理"></a>进程及作业管理</h3><h4 id="进程管理命令"><a href="#进程管理命令" class="headerlink" title="进程管理命令"></a>进程管理命令</h4><ul><li><strong>pstree</strong></li><li><strong>ps：</strong> process state<ul><li>Linux系统各进程的相关信息均保存在/proc/PID目录下的个文件中，进程状态查看工具即通过读取此类文件显示进程相关状态。</li><li>常用组合<ul><li>aux：<ul><li>u：以用户为中心组织进程状态信息显示</li><li>a：与终端相关的进程</li><li>x：与终端无关的进程</li><li>字段含义：<ul><li>VSZ：Virtual memory Size，虚拟内存集</li><li>RSS：ReSident Size，常驻内存集</li><li>STAT：进程状态<ul><li>R：running</li><li>S：interruptable sleeping</li><li>D：uninterruptable sleeping</li><li>T：stopped</li><li>Z：zombie<br>-</li><li>+：前台进程</li><li>I：多线程进程</li><li>N：低优先级进程</li><li>&lt;：高优先级进程</li><li>s：session leader</li></ul></li></ul></li></ul></li><li>-ejf<ul><li>-e：显示所有进程</li><li>-f：显示完整格式的进程信息</li></ul></li><li>-eFH：<ul><li>-F：显示完整格式的进程信息</li><li>-H：以进程层级格式显示进程相关信息</li></ul></li></ul></li></ul></li><li><strong>pgrep，pkill</strong><ul><li>-u uid：effective user，指明用户的所有进程</li><li>-U uid：real user</li><li>-t terminal：与指定终端相关的进程</li><li>-l：显示进程名</li><li>-a：显示完整格式的进程名</li><li>-P pid：显示其父进程为此处指定进程的进程列表</li></ul></li><li><strong>pidof：</strong> 根据进程名获取其PID号</li><li><strong>top</strong><ul><li>内置命令<ul><li>排序：<ul><li>P：以占据的CPU百分比排序</li><li>M：以占据内存百分比排序</li><li>T：以积累占据CPU时长排序</li></ul></li><li>首部信息显示<ul><li>iptime信息：l命令</li><li>tasks及cpu信息：t命令</li><li>多颗cpu分别显示：1（数字）</li><li>内存信息：m命令</li></ul></li><li>修改刷新时间间隔：s命令</li><li>终止指定进程：k命令</li><li>-d：直接指明刷新时间间隔</li><li>-b：以批次方式显示（旧命令）</li></ul></li></ul></li><li><strong>htop</strong><ul><li>s：跟踪选定进程的系统调用</li><li>l：显示选定进程打开的文件列表</li><li>a：将选定的进程绑定至某指定CPU核心</li><li>t：显示进程树</li></ul></li><li><strong>vmstat：</strong>查看虚拟内存的命令（旧命令）<ul><li>字段含义：<ul><li>procs：<ul><li>r：等待运行的进程的个数</li><li>b：处于不可中断睡眠态的进程的个数（被阻塞的队列的长度）</li></ul></li><li>memory：<ul><li>swpd：交换内存的使用总量</li><li>free：空闲物理内存总量</li><li>buffer：用于buffer的内存总量</li><li>cache：用于cache的内存总量</li></ul></li><li>swap：<ul><li>si：数据进入swap中的数据速率（kb/s）</li><li>so：数据离开swap中的数据速率（kb/s）</li></ul></li><li>io：<ul><li>bi：从块设备读入数据到系统的速率（kb/s）</li><li>bo：保存数据到块设备的速率（kb/s）</li></ul></li><li>system：<ul><li>in：interrupts，中断速率</li><li>cs：context switch，进程切换速率</li></ul></li><li>cpu：<ul><li>us：用户空间占据cpu的比例</li><li>sy：内核空间占据cpu的比例</li><li>id：空闲比例</li><li>wa：等待IO完成所消耗的时间比例</li><li>st：被虚拟化技术偷走的时间比例</li></ul></li></ul></li><li>-s显示内存的统计数据</li></ul></li><li><strong>pmap：</strong>报告进程的内存映射表<ul><li>pmap [option] pid […]</li><li>-x：显示详细的</li></ul></li><li><strong>glance</strong><ul><li>使用pip安装</li><li>-b：以Byte为单位显示网卡数据速率</li><li>-d：关闭磁盘I/O模块</li><li>-f：/path/to/simefile：设定输入文件位置</li><li>-o {HTML|CSV}：输出格式</li><li>-m：禁用mount模块</li><li>-n：禁用网络模块</li><li>-t #：延时时间间隔</li><li>-1：每个CPU的相关数据单独显示</li><li>C/S模式下运行glances命令<ul><li>服务端模式：<ul><li>glances -s -B IPADDR<ul><li>IPADDR：指明监听于本机的哪个地址</li></ul></li></ul></li><li>客户端模式：<ul><li>glances -c IPADDR<ul><li>IPADDR：要连入的服务器端地址</li></ul></li></ul></li></ul></li></ul></li><li><strong>dstat</strong><ul><li>-c：显示CPU的状态信息</li><li>-C #,#,…total</li><li>-d：显示磁盘的读写速率</li><li>-D：total,sda,sdb,…</li><li>-g：显示page相关统计数据</li><li>-i：显示中断的统计数据</li><li>-m：显示内存相关统计数据</li><li>-n：显示网络相关统计数据</li><li>-p：显示进程相关统计数据</li><li>-r：显示io相关统计数据</li><li>-s：显示swapped相关的统计数据</li><li>–tcp</li><li>–udp</li><li>–unix</li><li>–raw</li><li>–socket</li><li>–ipc</li><li>–top-cpu：显示最占用CPU的进程</li><li>–top-io：显示最占用io的进程</li><li>–top-mem：显示最占用内存的进程</li><li>–top-lantency：显示延迟最大的进程</li></ul></li><li><strong>kill</strong><ul><li>-l：显示当前系统可用信号<ul><li>man 7 signal</li><li>常用信号<ul><li>1) SIGHUP：无须关闭进程而让其重读配置文件</li><li>2) SIGINT：中止正在运行的进程，相当于Ctrl+c</li><li>9) SIGKILL：杀死正在运行的进程</li><li>15) SIGTERM：终止正在运行的进程</li><li>18) SIGCONT：</li><li>19) SIGSTOP：</li></ul></li><li>指定信号的方法<ul><li>信号的数字标识：1</li><li>信号的完整名称：SIGHUP</li><li>信号的简写名称：HUP</li></ul></li></ul></li><li>killall：终止名称之下的所有进程</li></ul></li></ul><h4 id="作业控制命令"><a href="#作业控制命令" class="headerlink" title="作业控制命令"></a>作业控制命令</h4><ul><li>作业类型：<ul><li>前台作业：通过终端启动，且启动后一直占据终端</li><li>后台作业：可与通过终端启动，但启动后即转入后台运行（释放终端）</li></ul></li><li>让作业运行于后台<ul><li>运行中的作业：<code>Ctrl+z</code></li><li>尚未启动的作业：<code>COMMAND &amp;</code><ul><li>注意：此类作业虽然被送往后台运行，但其依然与终端相关；如果希望送往后台后，剥离与终端的关系，使用<code>nohub COMMAND &amp;</code></li></ul></li></ul></li><li>查看所有作业<ul><li>jobs</li></ul></li><li>作业控制<ul><li>fg [[%]JOB_NUM]：把指定的后台作业调回前台</li><li>bg [[%]JOB_NUM]：让送往后台的作业在后台继续运行</li><li>kill [%JOB_NUM]：终止指定的作业</li></ul></li><li>进程优先级调整<ul><li>进程默认启动时的nice值为0，优先级为120</li><li>nice -n priority pid</li><li>renice -n priority pid</li><li>查看进程nice值<ul><li>ps axo pid,comm,ni</li></ul></li></ul></li><li>其他常用命令：sar、tsar、iostat、iftop</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;进程相关概念&quot;&gt;&lt;a href=&quot;#进程相关概念&quot; class=&quot;headerlink&quot; title=&quot;进程相关概念&quot;&gt;&lt;/a&gt;进程相关概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;进程：&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;处于运行状态的程序副本&lt;/li&gt;
&lt;li&gt;正在执行的程序代码的实时结果&lt;/li&gt;
&lt;li&gt;处于执行期的程序以及相关资源的总称&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;线程：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在进程中活动的对象&lt;/li&gt;
&lt;li&gt;每个线程都拥有一个独立的程序计数器、进程栈和一组进程寄存器&lt;/li&gt;
&lt;li&gt;是内核调度的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;同一个进程中的线程之间可以共享虚拟内存，但每个线程都拥有各自的虚拟处理器。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Windows和Solaris系统都在内核中提供了专门支持线程的机制，这些系统常常把线程称作轻量级进程，相较于重量级的进程，线程被抽象成一种耗费较少资源，运行迅速的执行单元。而对于Linux来说，它只是一种进程间共享资源的手段。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="OS" scheme="https://qiu-ye.github.io/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Linux网络属性配置</title>
    <link href="https://qiu-ye.github.io/2018/03/05/Linux%E7%BD%91%E7%BB%9C%E5%B1%9E%E6%80%A7%E9%85%8D%E7%BD%AE/"/>
    <id>https://qiu-ye.github.io/2018/03/05/Linux网络属性配置/</id>
    <published>2018-03-05T14:53:59.000Z</published>
    <updated>2018-03-05T15:35:00.066Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网络基础知识回顾"><a href="#网络基础知识回顾" class="headerlink" title="网络基础知识回顾"></a>网络基础知识回顾</h3><h4 id="IP地址分类"><a href="#IP地址分类" class="headerlink" title="IP地址分类"></a>IP地址分类</h4><ul><li>A类：<ul><li>0 000 0000 - 0 111 1111：1-127</li><li>网络数：127</li><li>每个网络中的主机数：2^24-2</li><li>默认子网掩码：255.0.0.0</li><li>私网地址：10.0.0.0/8</li></ul></li><li>B类：<ul><li>10 00 0000 - 10 11 1111：128-191</li><li>网络数：2^14</li><li>每个网络中的主机数：2^16-2</li><li>默认子网掩码：255.255.0.0</li><li>私网地址：172.16.0.0/16-172.31.0.0/16</li></ul></li><li>C类：<ul><li>110 0 0000 - 110 1 1111：192-223</li><li>网络数：2^21</li><li>每个网络中的主机数：2^8-2</li><li>默认子网掩码：255.255.255.0</li><li>私网地址：192.168.0.0/24-192.168.255.0/24</li></ul></li><li>D类：组播<ul><li>1110 0000 - 1110 1111：224-239</li></ul></li><li>E类：<ul><li>1111 0000 - 1111 1111：240-255</li></ul></li></ul><a id="more"></a><h4 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h4><ul><li>172.16.100.100/255.255.0.0，172.17.1.1</li><li>跨路由通信需要配置路由<ul><li>主机路由</li><li>网络路由</li><li>默认路由</li></ul></li></ul><h3 id="Linux网络属性配置"><a href="#Linux网络属性配置" class="headerlink" title="Linux网络属性配置"></a>Linux网络属性配置</h3><ul><li>Linux接入网络必须要素<ul><li>IP/mask</li><li>路由：默认网关</li><li>DNS服务器<ul><li>主DNS服务器</li><li>次DNS服务器</li><li>第三DNS服务器</li></ul></li></ul></li></ul><h4 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h4><ul><li>静态指定：</li><li>动态分配：<ul><li>DHCP：Dynamic Host Configuration Protocol</li></ul></li></ul><h5 id="ifcfg家族命令：ifconfig，route，netstat"><a href="#ifcfg家族命令：ifconfig，route，netstat" class="headerlink" title="ifcfg家族命令：ifconfig，route，netstat"></a>ifcfg家族命令：ifconfig，route，netstat</h5><ul><li><strong>ifconfig：</strong><ul><li>ifconfig [Interface]<ul><li>ifconfig -a</li><li>ifconfig IFACE [up/down]</li></ul></li><li>ifconfig Interface [aftype] option | address …<ul><li>ifconfig IFACE IP/mask [up]</li><li>ifconfig IFACE IP netmask MASK</li><li>启用混杂模式：[-]promisc</li></ul></li><li>注意：立即生效，但不一定永久生效</li></ul></li><li><strong>route：</strong> 路由管理<ul><li>route -n：查看</li><li>route add [-net|host] target [netmast Nm] [gw Gw] [[dev] If]<ul><li>目标：192.168.1.3  网关：172.16.0.1</li><li>route add -host 192.168.1.3 gw 172.16.0.1 dev eth0</li><li>目标：192.168.0.0  网关：172.16.0.1</li><li>route add -net 192.168.0.0/24 gw 172.16.0.1 dev eth0</li><li>route add -net 192.168.0.0 netmask 255.255.255.0 gw 172.16.0.1 dev eth0</li><li>默认路由，网关：127.16.0.1</li><li>route add -net 0.0.0.0 netmask 0.0.0.0 gw 172.16.0.1</li><li>route add default gw 172.16.0.1</li></ul></li><li>route del -host target<ul><li>目标：192.168.1.3  网关：172.16.0.1</li><li>route del -host 192.168.1.3</li><li>目标：192.168.0.0  网关：172.16.0.1</li><li>route del -net 192.168.0.0 netmask 255.255.255.0</li></ul></li></ul></li><li><strong>netstat：</strong> Print network connections, routing tables, interface statistics, masquerade connections, and mul‐ticast memberships<ul><li>显示网络连接：<ul><li>-t：TCP协议相关</li><li>-u：UDP协议相关</li><li>-r：raw socket相关</li><li>-l：处于监听状态</li><li>-a：所有状态</li><li>-n：以数字格式显示IP和窗口</li><li>-e：扩展格式</li><li>-p：显示相关进程及PID</li><li>常用组合：-tan，-uan，-tnl，-unl</li></ul></li><li>显示路由表<ul><li>-r：显示内核路由表</li><li>-n：数字格式</li></ul></li><li>显示接口统计信息<ul><li>-i：所有接口</li><li>-I IFACE：制定接口</li></ul></li></ul></li></ul><h5 id="ip家族命令：ip-link，addr，route-，ss，tc"><a href="#ip家族命令：ip-link，addr，route-，ss，tc" class="headerlink" title="ip家族命令：ip {link，addr，route}，ss，tc"></a>ip家族命令：ip {link，addr，route}，ss，tc</h5><ul><li><strong>ip link：</strong> 网络设备配置<ul><li>set<ul><li>[dev IFACE up|down]：启用或禁用接口</li></ul></li><li>show<ul><li>[dev IFACE]：制定接口</li><li>[up]：仅显示处于激活状态的接口</li></ul></li></ul></li><li><strong>ip addr</strong><ul><li>{add | del} IFADDR dev STRING<ul><li>[label LABEL]：添加地址时指明网卡别名</li><li>[scope {global|link|host}]：指明作用域<ul><li>global：全局可用</li><li>link：仅链接可用</li><li>host：本即可用</li></ul></li><li>[breadcast ADDRESS]：指明广播地址</li></ul></li><li>show<ul><li>[dev DEVICE]：制定接口</li><li>[label PATTERN]:</li><li>[primary and secondary]</li></ul></li><li>flush<ul><li>使用格式同show</li></ul></li></ul></li><li><strong>ip route</strong><ul><li>add：ip route add TARGET via GW dev IFACE src SOURCE_IP<ul><li>TARGET<ul><li>主机路由：IP</li><li>网络路由：NETWORK/MASK</li><li>添加网关：ip route add defalt via GW dev IFACE</li></ul></li></ul></li><li>del：ip route del TARGET</li><li>flush：ip route flush [dev iFACE] [via PREFIX]</li><li>show：ip route show [dev iFACE] [via PREFIX]</li></ul></li><li><strong>ss [OPTION]… [FILTER]</strong><ul><li>OPTION<ul><li>-t：tcp协议相关</li><li>-u：udp协议相关</li><li>-w：裸套接字相关</li><li>-x：unix sock相关</li><li>-l：listen状态的连接</li><li>-a：所有</li><li>-n：数字格式</li><li>-p：相关程序及PID</li><li>-e：扩展的信息</li><li>-m：内存用量</li><li>-o：计时器信息</li></ul></li><li>FILTER：[state TCP-STATE] [EXPRESSION]<ul><li>TCP-STATE：TCP的常见状态，TCP finite state machine<ul><li>LISTEN：监听</li><li>ESTABLISTEN：已建立的连接</li><li>FIN_WAIT_1</li><li>FIN_WAIT_2</li><li>SYN_SENT</li><li>SYN_RECV</li><li>CLOSED</li></ul></li><li>EXPRESSION<ul><li>dport</li><li>sport</li><li>示例：’(dport = :ssh or sport = :ssh)’</li></ul></li></ul></li><li>常用组合：-tan，-tanl，-tanlp，-uan</li></ul></li></ul><h5 id="更改配置文件："><a href="#更改配置文件：" class="headerlink" title="更改配置文件："></a>更改配置文件：</h5><ul><li><strong>IP、MASK、GW、NDS相关配置文件：</strong>/etc/sysconfig/network-scripts/ifcfg-IFACE<ul><li>DEVICE：此配置文件应用到的设备</li><li>HWADDR：对应的设备的MAC地址</li><li>BOOTPROTO：激活此设备时使用的地址配协议，常用的有dhcp，static，none，bootp</li><li>NM_CONTROLLED：NM是NetworkManager的简写，此网卡是否接受NM控制：CentOS6及建议为“no”</li><li>ON_BOOT：在系统引导时是否激活此设备</li><li>TYPE：接口类型，常见的有Ethernet，Bridge</li><li>UUID：设备的唯一标识</li><li>IPADDR：指明IP地址</li><li>NETMASK：子网掩码</li><li>GATEWAY：默认网关</li><li>DNS1：第一个DNS服务器指向</li><li>DNS2：第二个DNS服务器指向</li><li>USERCTL：普通用户是否可控制此设备</li><li>PEERDNS：如果BOOTPROTO的值为”dhcp”，是否允许dhcp server分配的dns服务器指向信息直接覆盖至/etc/resolv</li></ul></li><li><strong>路由相关的配置文件：</strong>/etc/sysconfig/network-scripts/route-IFACE<ul><li>两种风格的路由添加方式<ul><li>TARGET via GW</li><li>每三行定义一条路由<ul><li>ADDRESS#=TARGET</li><li>NETMASK#=mask</li><li>GATEWAY#=GW</li></ul></li></ul></li></ul></li><li><strong>system-config-network-tui（setup）</strong></li></ul><h5 id="CentOS-7网络属性配置："><a href="#CentOS-7网络属性配置：" class="headerlink" title="CentOS 7网络属性配置："></a>CentOS 7网络属性配置：</h5><ul><li>nmtui</li><li><p>nmcli [OPTIONS] OBJECT {COMMAND | help}</p><ul><li>device：网络接口显示和管理</li><li>connection：网络连接的启动禁用和管理<ul><li>修改IP地址等属性<ul><li>nmcli connection modify IFACE [+|-]setting.property value<ul><li>setting.property:<ul><li>ipv4.addresses</li><li>ipv4.gateway</li><li>ipv4.dns1</li><li>ipv4.method</li></ul></li></ul></li></ul></li></ul></li></ul></li><li><p>配置网络接口</p><ul><li>接口命名方式：<ul><li>CentOS：<ul><li>以太网：eth[0,1,3,…]</li></ul></li><li>systemd对网络设备的命名方式：<ul><li>如果Firmware或BIOS为主板上集成的设备提供的索引信息可用，且可预测根据此索引进行命名，例如eno1；</li><li>如果Firmware或BIOS为PCI-E扩展槽所提供的索引信息可用，且可预测，则根据此索引进行命名，例如ens1；</li><li>如果硬件接口的物理位置信息可用，则根据此信息进行命名，例如enp2s0；</li><li>如果用户显式启动，也可根据MAC地址命名，enx3287a1dc56；</li><li>上述均不可用时，则使用传统命名机制；</li><li>上述命名机制中，有的需要biosdevname程序的参与</li></ul></li><li>名称组成格式<ul><li>en：ethernet</li><li>wl：wlan</li><li>ww：wwan</li><li>名称类型<ul><li>o<index>：继承设备的设备索引号</index></li><li>s<slot>：扩展槽的索引号</slot></li><li>x<mac>：基于MAC地址的命名</mac></li><li>p<bus>s<slot>：enp2s1</slot></bus></li></ul></li></ul></li></ul></li><li>网卡设备的命名过程<ol><li>udev，辅助工具程序/lib/udev/rename_device查询文件/usr/lib/udev/rules.d/60-net.rules</li><li>biosdevname=1 会根据/usr/lib/udev/rules.d/71-biosdevname.rules文件命名</li><li>通过检测网络接口设备，根据/usr/lib/udev/rules.d/75-net-description<ul><li>ID_NET_NAME_ONBOARD,ID_NET_NAME_SLOT,ID_NET_NAME_PATH</li></ul></li></ol></li><li>网络接口识别并命名相关的udev配置文件<ul><li>/etc/udev/rules.d/70-persistent-net.rules</li><li>卸载网卡驱动：modprobe -r e1000</li><li>装载网卡驱动：modprobe e1000</li></ul></li><li>禁止修改网络接口名称<ul><li>修改/etc/default/grub<ul><li>将GRUB_CMDLINE_LINUX行改为”GRUB_CMDLINE_LINUX=”net.ifnames=0 rhgb quiet””</li><li>重新生成grub配置文件<ul><li>grub2-mkconfig -o /boot/grub/grub2.cfg</li></ul></li><li>重启系统</li></ul></li></ul></li></ul></li></ul><h5 id="其他网络相关常用命令"><a href="#其他网络相关常用命令" class="headerlink" title="其他网络相关常用命令"></a>其他网络相关常用命令</h5><ul><li>DNS服务器指定<ul><li>编辑文件：/etc/resolv.conf<ul><li>nameserver DNS_SERVER_IP1</li><li>nameserver DNS_SERVER_IP2</li><li>nameserver DNS_SERVER_IP3</li></ul></li><li>正解：FQDN –&gt; IP<ul><li>dig -t A FQDN</li><li>host -t A FQDN</li></ul></li><li>反解：IP –&gt; FQDN<ul><li>dig -x IP</li><li>host -t PTR IP</li></ul></li></ul></li><li>给网卡配置多地址<ul><li>ifconfig IFACE_ALITS</li><li>ip addr add</li><li>配置文件：<ul><li>ifcfg-IFACE_ALITS<ul><li>DEVICE-IFACE_ALIAS</li></ul></li></ul></li><li>注意：网关别名不能使用dhcp协议引导</li></ul></li><li>配置当前主机的主机名<ul><li>hostname [HOSTNAME]</li><li>/etc/sysconfig/network<ul><li>HOSTNAME=</li></ul></li></ul></li><li>网络客户端lftp、wget<ul><li>lftp [-p port] [-u user[,password]] SERVER</li><li>子命令：<ul><li>get</li><li>mget</li><li>ls</li><li>help</li><li>lftpget URL</li></ul></li><li>wget [option]… [URL]…<ul><li>-q：静默模式</li><li>-c：断点续传</li><li>-o：保存位置</li><li>–limit-ratesz：指定传输速率</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;网络基础知识回顾&quot;&gt;&lt;a href=&quot;#网络基础知识回顾&quot; class=&quot;headerlink&quot; title=&quot;网络基础知识回顾&quot;&gt;&lt;/a&gt;网络基础知识回顾&lt;/h3&gt;&lt;h4 id=&quot;IP地址分类&quot;&gt;&lt;a href=&quot;#IP地址分类&quot; class=&quot;headerlink&quot; title=&quot;IP地址分类&quot;&gt;&lt;/a&gt;IP地址分类&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;A类：&lt;ul&gt;
&lt;li&gt;0 000 0000 - 0 111 1111：1-127&lt;/li&gt;
&lt;li&gt;网络数：127&lt;/li&gt;
&lt;li&gt;每个网络中的主机数：2^24-2&lt;/li&gt;
&lt;li&gt;默认子网掩码：255.0.0.0&lt;/li&gt;
&lt;li&gt;私网地址：10.0.0.0/8&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;B类：&lt;ul&gt;
&lt;li&gt;10 00 0000 - 10 11 1111：128-191&lt;/li&gt;
&lt;li&gt;网络数：2^14&lt;/li&gt;
&lt;li&gt;每个网络中的主机数：2^16-2&lt;/li&gt;
&lt;li&gt;默认子网掩码：255.255.0.0&lt;/li&gt;
&lt;li&gt;私网地址：172.16.0.0/16-172.31.0.0/16&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;C类：&lt;ul&gt;
&lt;li&gt;110 0 0000 - 110 1 1111：192-223&lt;/li&gt;
&lt;li&gt;网络数：2^21&lt;/li&gt;
&lt;li&gt;每个网络中的主机数：2^8-2&lt;/li&gt;
&lt;li&gt;默认子网掩码：255.255.255.0&lt;/li&gt;
&lt;li&gt;私网地址：192.168.0.0/24-192.168.255.0/24&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;D类：组播&lt;ul&gt;
&lt;li&gt;1110 0000 - 1110 1111：224-239&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;E类：&lt;ul&gt;
&lt;li&gt;1111 0000 - 1111 1111：240-255&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
      <category term="TCP/IP" scheme="https://qiu-ye.github.io/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>RAID基础原理</title>
    <link href="https://qiu-ye.github.io/2018/03/05/RAID%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/"/>
    <id>https://qiu-ye.github.io/2018/03/05/RAID基础原理/</id>
    <published>2018-03-05T14:17:39.000Z</published>
    <updated>2018-03-05T14:51:17.365Z</updated>
    
    <content type="html"><![CDATA[<h3 id="RAID概念"><a href="#RAID概念" class="headerlink" title="RAID概念"></a>RAID概念</h3><ul><li>Redundant Arrays of Inexpensive/Independent Disks</li><li>廉价/独立冗余磁盘阵列</li></ul><a id="more"></a><h3 id="提高磁盘性能的方法"><a href="#提高磁盘性能的方法" class="headerlink" title="提高磁盘性能的方法"></a>提高磁盘性能的方法</h3><ul><li>提高IO能力<ul><li>磁盘并行读写、添加内存模块</li></ul></li><li>提高耐用性<ul><li>通过磁盘冗余实现</li></ul></li><li>实现方式<ul><li>外接式磁盘阵列：通过扩展卡提供适配能力</li><li>内接式RAID：主板集成RAID控制器</li><li>Software RAID：</li></ul></li></ul><h3 id="RAID级别："><a href="#RAID级别：" class="headerlink" title="RAID级别："></a>RAID级别：</h3><ul><li>REID-0：0，条带卷，strip<ul><li>读、写性能提升</li><li>可用空间：N*min(S1,S2…)</li><li>无容错能力</li><li>最少磁盘数2</li></ul></li><li>REID-1：1，镜像卷，mirror<ul><li>读性能提升、写性能略有下降</li><li>可用空间1*min(S1,S2…)</li><li>有冗余能力</li><li>最少磁盘数2</li></ul></li><li>REID-5：循环作为校验盘<ul><li>读写性能提升</li><li>可用空间(N-1)*min(S1,S2…)</li><li>有容错能力；1块磁盘</li><li>最少磁盘数3</li></ul></li><li>REID-6：循环作为校验盘，两块校验盘<ul><li>读写性能提升</li><li>可用空间(N-2)*min(S1,S2…)</li><li>有容错能力；2块磁盘</li><li>最少磁盘数4</li></ul></li><li>REID-10：先按照READ-1组织，再按照REID-0组织<ul><li>读写性能提升</li><li>可用空间N*min(S1,S2…)/2</li><li>有容错能力；每组镜像最多只能坏一块</li><li>最少磁盘数4</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;RAID概念&quot;&gt;&lt;a href=&quot;#RAID概念&quot; class=&quot;headerlink&quot; title=&quot;RAID概念&quot;&gt;&lt;/a&gt;RAID概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Redundant Arrays of Inexpensive/Independent Disks&lt;/li&gt;
&lt;li&gt;廉价/独立冗余磁盘阵列&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>程序包管理</title>
    <link href="https://qiu-ye.github.io/2018/02/28/%E7%A8%8B%E5%BA%8F%E5%8C%85%E7%AE%A1%E7%90%86/"/>
    <id>https://qiu-ye.github.io/2018/02/28/程序包管理/</id>
    <published>2018-02-28T09:52:10.000Z</published>
    <updated>2018-02-28T11:01:02.237Z</updated>
    
    <content type="html"><![CDATA[<h3 id="程序包管理器"><a href="#程序包管理器" class="headerlink" title="程序包管理器"></a>程序包管理器</h3><ul><li>功能：将编译好的应用程序的各组成文件打包成一个或几个程序包文件，从而方便快捷地实现程序包地安装、卸载、查询、升级和校验等管理操作</li><li>组成部分<ul><li>程序的组成清单（每个包独有）<ul><li>文件清单</li><li>安装或卸载时运行的脚本</li></ul></li><li>数据库（公共）<ul><li>程序包名称及版本</li><li>依赖关系</li><li>功能说明</li><li>安装生成的各文件的文件路径及校验码信息</li></ul></li></ul></li><li>程序包获取途径<ul><li>系统发行版的光盘或官方服务器、镜像站点<ul><li><a href="http://mirrors.aliyun.com" target="_blank" rel="noopener">http://mirrors.aliyun.com</a></li><li><a href="http://mirrors.sohu.com" target="_blank" rel="noopener">http://mirrors.sohu.com</a></li><li><a href="http://mirrors.163.com" target="_blank" rel="noopener">http://mirrors.163.com</a></li></ul></li><li>项目官方站点</li><li>第三方组织<ul><li><a href="http://pkgs.org" target="_blank" rel="noopener">http://pkgs.org</a></li><li><a href="http://rpmfind.net" target="_blank" rel="noopener">http://rpmfind.net</a></li><li><a href="http://rpm.pbone.net" target="_blank" rel="noopener">http://rpm.pbone.net</a></li></ul></li></ul></li><li>ldd /PATH/TO/BINARY_FILE：查看二进制程序所依赖的库文件</li><li>ldconfig<ul><li>-p：显示本机已经缓存的所有可用的库文件名及文件路径映射关系</li><li>配置文件：/etc/ld.so.conf,/etc/ld.so.conf.d/*.conf</li><li>缓存文件：/etc/ld.so.cache</li></ul></li></ul><a id="more"></a><h3 id="CentOS系统上rpm命令管理程序"><a href="#CentOS系统上rpm命令管理程序" class="headerlink" title="CentOS系统上rpm命令管理程序"></a>CentOS系统上rpm命令管理程序</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>rpm {-i|–install} [install-options] PACKAGE_FILE<ul><li>-v：verbose</li><li>-vv</li><li>-h：以#显示程序包管理执行进度</li><li>-ivh [install-options]<ul><li>–test：测试安装，但不真正执行安装过程，dry run模式</li><li>–nodeps：忽略依赖关系</li><li>–replacepkgs：重新安装</li><li>–nodigest：不检查包完整性</li><li>–noscipts：不执行程序包脚本片段<ul><li>–nopre：安装前脚本</li><li>–nopost：安装后脚本</li><li>–nopreun：卸载前脚本</li><li>–nopostun：卸载后脚本</li></ul></li></ul></li></ul></li></ul><h4 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h4><ul><li>rpm {-U|–upgrade} [install-options] PACKAGE_FILE<ul><li>-Uvh<ul><li>安装有旧版程序包，则“升级”；如果不存在旧版程序包，则“安装”</li></ul></li></ul></li><li>rpm {-F|–freshen} [install-options] PACKAGE_FILE<ul><li>-Fvh<ul><li>安装有旧版程序包，则“升级”；如果不存在旧版程序包，则不执行升级操作</li></ul></li><li>–oldpackage：降级</li><li>–force：强制升级</li></ul></li><li>不要对内核做升级操作；Linux支持多内核不版本并存，因此可直接安装新版本内核</li><li>如果原程序包的配置文件安装后被更改，升级时新版本提供的同一个配置文件不会直接覆盖老版本的配置文件，而把新版本的文件重命名（FILENAME.rpmnew）后保留</li></ul><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><ul><li>rpm {-q|–query} [select-options] [query-options] PACKAGE_FILE<ul><li>[select-options]<ul><li>-a：所有包</li><li>-f：查看制定的文件由哪个程序包安装生成</li><li>-p /PATH/TO/PACKAGE_FILE：针对尚未安装的程序包文件做查询操作</li><li>–whatprovides CAPABILITY：查询指定的CAPABILITY由哪个包所提供</li><li>–whatrequires CAPABILITY：查询指定的CAPABILITY被哪个包所依赖</li></ul></li><li>[query-options]<ul><li>–changelog：查询rpm包的changlog</li><li>-c：查询程序的配置文件</li><li>-d：查询程序的文档</li><li>-i：information</li><li>-l：查看指定的程序包安装后生成的所有文件</li><li>–scripts：程序包自带的脚本片段</li><li>-R：查询指定的程序包所依赖的CAPABILITY</li><li>–provides：列出指定程序包所提供的CAPABILITY</li></ul></li><li>-qi -qf -qc -ql -qd -qpi -qpl -qa</li></ul></li></ul><h4 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h4><ul><li>rpm {-e|–erase} [–allmatches] [–nodeps] [–noscripts] [–notriggers] [–test] PACKAGE_FILE</li></ul><h4 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h4><ul><li>rpm {-V|–verify} [select-options] [verify-options]</li><li>包完整性验证：SHA256</li><li>来源合法性验证：RSA</li></ul><h4 id="数据库重建"><a href="#数据库重建" class="headerlink" title="数据库重建"></a>数据库重建</h4><ul><li>rpm {–initdb|–rebuilddb}<ul><li>initdb：初始化，如果事先不存在数据库，则新建；否则，不执行任何操作</li><li>rebuilddb：无论当前存在与否，直接重建数据库</li></ul></li></ul><h3 id="yum"><a href="#yum" class="headerlink" title="yum"></a>yum</h3><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><ul><li>install/reinstall</li><li>update/downgrade</li><li>check-update</li><li>remove</li><li>info</li><li>provides</li><li>clean [packages | metadate | expire-cache | rpmdb | plugins | all]</li><li>makecache：构建缓存</li><li>search string1：以指定的关键字搜索程序包名及summary信息</li><li>deplist：查看指定包所依赖的capabilities</li><li>history [info | list | packages-info | summary | addon-info | redo | undo | rollback | new | sync | stats]</li></ul><h4 id="使用光盘当作本地yum仓库"><a href="#使用光盘当作本地yum仓库" class="headerlink" title="使用光盘当作本地yum仓库"></a>使用光盘当作本地yum仓库</h4><ul><li>挂载光盘至某目录 <code>mount -r -t iso9660 /dev/cdrom /media/cdrom</code></li><li>创建配置文件<ul><li>[CentOS7]</li><li>name=</li><li>baseuel=</li><li>gpgcheck=</li><li>enabled=</li></ul></li></ul><h4 id="yum的命令行选项"><a href="#yum的命令行选项" class="headerlink" title="yum的命令行选项"></a>yum的命令行选项</h4><ul><li>–nogpgcheck：禁止进行GPG检查</li><li>-y：自动回答为yes</li><li>-q：静默模式</li><li>–disablerepo=repoidglob：临时禁用此处指定的repo</li><li>–enablerepo=repoidglob：临时启用此处指定的repo</li></ul><h4 id="yum的repo配置文件中可用的变量"><a href="#yum的repo配置文件中可用的变量" class="headerlink" title="yum的repo配置文件中可用的变量"></a>yum的repo配置文件中可用的变量</h4><ul><li>$releasever:当前OS的发行版的主版本号</li><li>$arch：平台</li><li>$basearch：基础平台</li></ul><h4 id="创建yum仓库"><a href="#创建yum仓库" class="headerlink" title="创建yum仓库"></a>创建yum仓库</h4><ul><li>createrepo</li></ul><h3 id="程序包编译安装"><a href="#程序包编译安装" class="headerlink" title="程序包编译安装"></a>程序包编译安装</h3><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><ul><li>testapp-VERSION-release.src.rpm —&gt; 安装后使用rpmrebuild命令制作成二进制格式的rpm包，然后再安装</li><li>源代码组织格式<ul><li>多文件：文件中的代码之间，可能存在跨文件依赖关系</li><li>项目管理器<ul><li>c\C++：make （configure -&gt; Makefile.in -&gt; makefile）</li><li>java：maven</li></ul></li></ul></li><li>开发工具<ul><li>autoconf：生成configure脚本</li><li>automake：生成Makefile.in</li></ul></li><li>开源程序源代码获取<ul><li>官方自建站点<ul><li>apache.org(ASF)</li><li>mariadb.org</li></ul></li><li>代码托管<ul><li>SourceForge</li><li>github.com</li></ul></li></ul></li></ul><h4 id="编译C源码"><a href="#编译C源码" class="headerlink" title="编译C源码"></a>编译C源码</h4><ul><li>提供开发工具及开发环境<ul><li>开发工具：make，gcc等</li><li>开发环境：开发库（标准库 gilbc），头文件</li><li>编译安装三步骤</li><li>./configure:<ul><li>通过选项传递参数，指定启用特性、安装路径等，执行时会参考用户的指定以及Makefile.in文件生成makefile</li><li>检查依赖到的外部环境</li><li>选项<ul><li>安装路径设定：<ul><li>–prefix=/PATH/TO/SOMEWHERE：制定默认安装位置</li><li>–sysconfdir=/PATH/TO/SOMEWHERE：配置文件安装位置</li></ul></li><li>System types：交叉编译时使用，制定系统类型</li><li>Optional Features：可选特性<ul><li>–disable-FEATURE</li><li>–enable-FEATURE[=ARG]</li></ul></li><li>Optional Packages：依赖到的可选包<ul><li>–with-PACKAGE[=ARG]</li><li>–without-PACKAGE</li></ul></li></ul></li></ul></li><li>make：根据makefile文件构建应用程序</li><li>make install</li></ul></li><li>安装后的配置<ul><li>导出二进制程序目录至PATH环境变量中<ul><li>编辑文件/etc/profile.d/NAME.sh</li><li>export PATH=/PATH/TO/BIN:$PATH</li></ul></li><li>导出库文件路径<ul><li>编辑文件/etc/ld.so.conf.d/NAME.sh</li><li>添加新的库文件所在目录至此文件中</li><li>让系统重新生成缓存</li><li>ldconfig [v]</li></ul></li><li>导出头文件<ul><li>基于链接的方式实现ln -sv</li></ul></li><li>导出帮助手册<ul><li>编辑文件/etc/man.config</li><li>添加一个MANPATH</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;程序包管理器&quot;&gt;&lt;a href=&quot;#程序包管理器&quot; class=&quot;headerlink&quot; title=&quot;程序包管理器&quot;&gt;&lt;/a&gt;程序包管理器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;功能：将编译好的应用程序的各组成文件打包成一个或几个程序包文件，从而方便快捷地实现程序包地安装、卸载、查询、升级和校验等管理操作&lt;/li&gt;
&lt;li&gt;组成部分&lt;ul&gt;
&lt;li&gt;程序的组成清单（每个包独有）&lt;ul&gt;
&lt;li&gt;文件清单&lt;/li&gt;
&lt;li&gt;安装或卸载时运行的脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据库（公共）&lt;ul&gt;
&lt;li&gt;程序包名称及版本&lt;/li&gt;
&lt;li&gt;依赖关系&lt;/li&gt;
&lt;li&gt;功能说明&lt;/li&gt;
&lt;li&gt;安装生成的各文件的文件路径及校验码信息&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;程序包获取途径&lt;ul&gt;
&lt;li&gt;系统发行版的光盘或官方服务器、镜像站点&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mirrors.aliyun.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://mirrors.aliyun.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mirrors.sohu.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://mirrors.sohu.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mirrors.163.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://mirrors.163.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;项目官方站点&lt;/li&gt;
&lt;li&gt;第三方组织&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://pkgs.org&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://pkgs.org&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rpmfind.net&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://rpmfind.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rpm.pbone.net&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://rpm.pbone.net&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ldd /PATH/TO/BINARY_FILE：查看二进制程序所依赖的库文件&lt;/li&gt;
&lt;li&gt;ldconfig&lt;ul&gt;
&lt;li&gt;-p：显示本机已经缓存的所有可用的库文件名及文件路径映射关系&lt;/li&gt;
&lt;li&gt;配置文件：/etc/ld.so.conf,/etc/ld.so.conf.d/*.conf&lt;/li&gt;
&lt;li&gt;缓存文件：/etc/ld.so.cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>磁盘和文件系统管理</title>
    <link href="https://qiu-ye.github.io/2018/02/28/%E7%A3%81%E7%9B%98%E5%92%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
    <id>https://qiu-ye.github.io/2018/02/28/磁盘和文件系统管理/</id>
    <published>2018-02-28T09:31:49.000Z</published>
    <updated>2018-02-28T11:14:07.278Z</updated>
    
    <content type="html"><![CDATA[<h3 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h3><ul><li>fdisk：一块硬盘最多管理15个分区<ul><li>fdisk -l Device</li><li>fdisk Device<ul><li>p：print，显示已有分区</li><li>n：new，创建</li><li>d：delete，删除</li><li>w：write，写入磁盘并退出</li><li>q：quit，放弃更改并退出</li><li>m：获取帮助</li><li>l：分区id列表</li><li>t：调整分区id</li></ul></li></ul></li><li>查看内核是否已经识别新的分区<ul><li>cat /proc/partations</li></ul></li><li>通知内核重新读取硬盘分区表<ul><li>partx -a /dev/device<ul><li>-n M:N</li></ul></li><li>kpartx -a /dev/device<ul><li>-f force</li><li>-a</li></ul></li></ul></li></ul><a id="more"></a><h3 id="文件系统管理"><a href="#文件系统管理" class="headerlink" title="文件系统管理"></a>文件系统管理</h3><h4 id="创建文件系统"><a href="#创建文件系统" class="headerlink" title="创建文件系统"></a>创建文件系统</h4><ul><li>相关工具<ul><li>mkfs.FS_TYPE /dev/device<ul><li>ext4</li><li>xfs</li><li>btrfs</li><li>vfat</li></ul></li><li>mkfs -t FS_TYPE /dev/device<ul><li>-L ‘LABEL’：设定卷标</li></ul></li><li>mke2fs：ext系列文件系统管理工具<ul><li>-t {ext2|ext3|ext4}</li><li>-b {1024|2048|4096}</li><li>-L ‘LABEL’</li><li>-j 相当于 -t ext3<ul><li>mkfs.ext3 = mkfs -t ext3 = mke2fs -j = mk2fs -t ext3</li></ul></li><li>-i #：为数据空间中每多少个字节创建一个inode，此大小不应该小于block的大小</li><li>-N #：为数据空间创建个多少个inode</li><li>-m #：为管理人员预留的空间占据的百分比</li><li>-O FEATURE[,…]<ul><li>-O ^FEATURE：关闭制定特性</li></ul></li></ul></li><li>mkswap：创建交换分区<ul><li>-L ‘LABEL’</li><li>前提：调整其分区的ID为82</li></ul></li></ul></li><li>其他常用工具<ul><li>blkid ：块设备属性信息查看<ul><li>-U UUID：根据指定的UUID来查找对应的设备</li><li>-L LABEL：根据指定的LABEL来查找对应的设备</li></ul></li><li>e2label：管理ext系列文件系统的LABEL<ul><li>e2label device</li></ul></li><li>tune2fs：重新设定ext系列文件系统可调整参数的值<ul><li>-l：查看指定文件系统超级块信息</li><li>-L ‘LABEL’ ：修改卷标</li><li>-j：将ext2升级为ext3</li><li>-O：文件系统属性启动或禁用</li><li>-o：调整文件系统的默认挂载选项</li><li>-U UUID：修改UUID号</li></ul></li><li>dumpe2fs：<ul><li>-h：查看超级块信息</li></ul></li></ul></li></ul><h4 id="文件系统检测"><a href="#文件系统检测" class="headerlink" title="文件系统检测"></a>文件系统检测</h4><ul><li>fsck：file system check<ul><li>fsck.FS_TYPE</li><li>fsck -t FS_TYPE</li><li>-a：自动修复错误</li><li>-r：交互式修复错误</li><li>FS_TYPE一定要与分区的文件系统相符</li></ul></li><li>e2fsck：ext系列文件专用的检测修复工具<ul><li>-y：自动回答为yes</li><li>-f：强制修复</li></ul></li></ul><h4 id="文件系统挂载"><a href="#文件系统挂载" class="headerlink" title="文件系统挂载"></a>文件系统挂载</h4><ul><li>挂载点下原有的文件在挂载完成后会被临时隐藏</li><li>通过查看/etc/mtab文件显示当前系统已挂载的所有设备</li><li>通过查看/proc/mounts文件显示内核追踪到的已挂载的所有设备</li><li>mount [-fnrsvw] [-t vfstype] [-o options] device dir<ul><li>device：指名要挂载的设备<ul><li>设备文件：/dev/sda4</li><li>卷标：-L ‘LABEL’</li><li>UUID：-U ‘UUID’</li><li>伪文件系统名称：proc，sysfs，devtmpfs，configfs</li></ul></li><li>dir：挂载点<ul><li>事先存在，建议使用空目录</li><li>-t vsftype：指定要挂载的设备上的文件系统类型</li><li>-r：readonly，只读挂载</li><li>-w：read and write，读写挂载</li><li>-n：不更新/etc/mtab</li><li>-a：自动挂载所有支持自动挂载的设备，定义在/etc/fstab文件中，且挂载选项中中有“自动挂载”功能</li><li>-L ‘LABEL’：以卷标指定挂载设备</li><li>-U ‘UUID’：以UUID指定挂载设备</li><li>-B，–bind：绑定目录到另一个目录上</li><li>-o options：挂载文件系统的选项<ul><li>async/sync：异步/同步模式</li><li>atime/noatime：是否更新访问时间戳，包含目录和文件</li><li>diratime/nodiratime：目录的访问时间戳</li><li>auto/noauto：是否支持自动挂载</li><li>exec/noexec：是否支持将文件系统上应用程序运行为进程</li><li>dev/nodev：是否支持在此文件系统上使用设备文件</li><li>suid/nosuid</li><li>remount：重新挂载</li><li>ro：只读</li><li>rw：读写</li><li>user/nouser：是否允许普通用户挂载此设备</li><li>acl：启用此文件系统上的acl功能</li><li>defaults：rw,suid,dev,exec,auto,nouser,and async</li><li>上述选项可多个同时使用，彼此使用逗号分隔</li></ul></li></ul></li></ul></li><li>查看正在访问指定文件系统的进程：<code>fuser -v MOUNT_POINT</code></li><li>终止所有正在访问指定的文件系统的进程：<code>fuser -km MOUNT_POINT</code></li><li>文件挂载的配置文件：/etc/fstab<ul><li>每行定义一个要挂载的文件系统</li><li>字段含义<ul><li>要挂载的设备或伪文件系统<ul><li>设备文件、LABEL、UUID、伪文件系统名称</li></ul></li><li>挂载点</li><li>文件系统类型</li><li>挂载选项</li><li>转储频率<ul><li>0：不做备份</li><li>1：每天转储</li><li>2：每隔一天转储</li></ul></li><li>自检次序<ul><li>0：不自检</li><li>1：首先自检，一般只有rootfs采用1</li></ul></li></ul></li></ul></li></ul><h4 id="文件系统空间占用等信息的查看工具"><a href="#文件系统空间占用等信息的查看工具" class="headerlink" title="文件系统空间占用等信息的查看工具"></a>文件系统空间占用等信息的查看工具</h4><ul><li>df<ul><li>-h：human-readable</li><li>-i：inodes instead of blocks</li><li>-P：以Posix兼容的格式输出</li></ul></li><li>du：查看某目录总体空间占用状态<ul><li>du [OPTION]… DIR</li><li>-h：human-readable</li><li>-s：summary</li></ul></li></ul><h4 id="文件系统上的其他概念"><a href="#文件系统上的其他概念" class="headerlink" title="文件系统上的其他概念"></a>文件系统上的其他概念</h4><ul><li>Inode：Index Node，索引节点</li><li>inode bitmap</li><li>链接文件<ul><li>硬链接：<ul><li>不能够对目录进行</li><li>不能跨分区进行</li><li>指向同一个inode的多个不同路径，创建文件的硬链接即为为inode创建新的引用路径，因此会增加其引用计数</li></ul></li><li>符号链接：<ul><li>可以对目录进行</li><li>可以跨分区</li><li>指向的是另一个文件的路径，其大小为指向的路径字符串的长度，不增加或减少目标文件的inode的引用计数</li><li>ln [-sv] SRC DEST<ul><li>-s：symbolic link</li><li>-v：verbose</li></ul></li></ul></li></ul></li><li>dd命令<ul><li>dd if=/PATH/FROM/SRC of=/PATH/TO/EDST<ul><li>bs=#：block size，复制单元大小</li><li>count=#：复制的bs数目</li></ul></li><li>磁盘拷贝<ul><li>dd if=/dev/sda of=/dev/sdb</li></ul></li><li>备份MBR<ul><li>dd if=/dev/sda of=/tmp/mbr.bak bs=512 count=1</li></ul></li><li>快速清空MBR中的bootloader<ul><li>dd if=/dev/zero of=/dev/sda bs=256 count=1</li></ul></li></ul></li></ul><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><ul><li>创建一个20G的文件系统，块大小为2048，文件系统为ext4，卷标为TEST，要求此分区开机后自动挂载至/testing目录，且默认有acl挂载选项<ol><li>fdisk /dev/sda ：n +20G t 4 83 w</li><li>partx -a /dev/sda</li><li>mke2fs -t ext4 -b 2048 -L ‘TEST’ /dev/sda4</li><li>/etc/fstab: add /dev/sda4 /testing ext4 defaults,acl 0 0</li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;磁盘管理&quot;&gt;&lt;a href=&quot;#磁盘管理&quot; class=&quot;headerlink&quot; title=&quot;磁盘管理&quot;&gt;&lt;/a&gt;磁盘管理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;fdisk：一块硬盘最多管理15个分区&lt;ul&gt;
&lt;li&gt;fdisk -l Device&lt;/li&gt;
&lt;li&gt;fdisk Device&lt;ul&gt;
&lt;li&gt;p：print，显示已有分区&lt;/li&gt;
&lt;li&gt;n：new，创建&lt;/li&gt;
&lt;li&gt;d：delete，删除&lt;/li&gt;
&lt;li&gt;w：write，写入磁盘并退出&lt;/li&gt;
&lt;li&gt;q：quit，放弃更改并退出&lt;/li&gt;
&lt;li&gt;m：获取帮助&lt;/li&gt;
&lt;li&gt;l：分区id列表&lt;/li&gt;
&lt;li&gt;t：调整分区id&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查看内核是否已经识别新的分区&lt;ul&gt;
&lt;li&gt;cat /proc/partations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;通知内核重新读取硬盘分区表&lt;ul&gt;
&lt;li&gt;partx -a /dev/device&lt;ul&gt;
&lt;li&gt;-n M:N&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;kpartx -a /dev/device&lt;ul&gt;
&lt;li&gt;-f force&lt;/li&gt;
&lt;li&gt;-a&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>文件的特殊权限</title>
    <link href="https://qiu-ye.github.io/2018/02/28/%E6%96%87%E4%BB%B6%E7%9A%84%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90/"/>
    <id>https://qiu-ye.github.io/2018/02/28/文件的特殊权限/</id>
    <published>2018-02-28T09:23:29.000Z</published>
    <updated>2018-02-28T11:14:03.798Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安全上下文概念"><a href="#安全上下文概念" class="headerlink" title="安全上下文概念"></a>安全上下文概念</h3><ul><li>任何一个可执行文件能不能启动为进程，取决于发起者对程序文件是否拥有执行权限</li><li>启动进程后，其进程的属主为发起者，进程的属组为发起者所属的组</li><li>进程访问文件时的权限，取决于进程的发起者<ul><li>进程的发起者与文件的属主相同，则应用文件属主权限</li><li>进程的发起者属于文件的属组，则应用文件数组权限</li><li>否则应用文件“其他”权限</li></ul></li></ul><a id="more"></a><h3 id="文件的特殊权限"><a href="#文件的特殊权限" class="headerlink" title="文件的特殊权限"></a>文件的特殊权限</h3><ul><li>SUID<ul><li>任何一个可执行文件能不能启动为进程，取决于发起者对程序文件是否拥有执行权限</li><li>启动进程后，其进程的属主为源程序文件的属主</li><li>权限设定<ul><li>chmod u+s FILE</li><li>chmod u-s FILE</li></ul></li></ul></li><li>SGID<ul><li>默认情况下，用户创建文件时，其属组为此用户所属的基本组</li><li>一旦某目录被设定为SGID，则对此目录有写权限的用户在此目录中创建的文件所属的组为此目录的属组</li><li>能否删除一个文件取决于，用户对文件所在的目录是否有写权限</li><li>权限设定<ul><li>chmod g+s DIR</li><li>chmod g-s DIR</li></ul></li></ul></li><li>Sticky<ul><li>对于一个多人可写的目录（/tmp），如果设置了sticky，则每个用户只能删除自己的文件</li><li>权限设定<ul><li>chmod o+t DIR</li><li>chmod o-t DIR</li></ul></li></ul></li><li>特殊权限可以映射为0-7的值<ul><li>SUID：映射在user，占据属主的执行权限位<ul><li>s：user拥有x权限</li><li>S：user没有x权限</li></ul></li><li>SGID：映射在group，占据属组的执行权限位<ul><li>s：group拥有x权限</li><li>S：group没有x权限</li></ul></li><li>Sticky：映射在other，占据其他的执行权限位<ul><li>t：other拥有x权限</li><li>T：other没有x权限</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安全上下文概念&quot;&gt;&lt;a href=&quot;#安全上下文概念&quot; class=&quot;headerlink&quot; title=&quot;安全上下文概念&quot;&gt;&lt;/a&gt;安全上下文概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;任何一个可执行文件能不能启动为进程，取决于发起者对程序文件是否拥有执行权限&lt;/li&gt;
&lt;li&gt;启动进程后，其进程的属主为发起者，进程的属组为发起者所属的组&lt;/li&gt;
&lt;li&gt;进程访问文件时的权限，取决于进程的发起者&lt;ul&gt;
&lt;li&gt;进程的发起者与文件的属主相同，则应用文件属主权限&lt;/li&gt;
&lt;li&gt;进程的发起者属于文件的属组，则应用文件数组权限&lt;/li&gt;
&lt;li&gt;否则应用文件“其他”权限&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>find命令总结</title>
    <link href="https://qiu-ye.github.io/2018/02/28/find%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>https://qiu-ye.github.io/2018/02/28/find命令总结/</id>
    <published>2018-02-28T05:05:51.000Z</published>
    <updated>2018-02-28T11:13:58.785Z</updated>
    
    <content type="html"><![CDATA[<h1 id="查找命令：find"><a href="#查找命令：find" class="headerlink" title="查找命令：find"></a>查找命令：find</h1><h3 id="根据文件名查找"><a href="#根据文件名查找" class="headerlink" title="根据文件名查找"></a>根据文件名查找</h3><ul><li>-name “filename”：支持使用glob，*，？，[]，[^]</li><li>-iname “filename”：不区分大小写</li></ul><h3 id="根据属主、属组查找"><a href="#根据属主、属组查找" class="headerlink" title="根据属主、属组查找"></a>根据属主、属组查找</h3><ul><li>-user USERNAME：属主<ul><li>例子：find /usr -not ( -user root -o -user bin -o -user hadoop )</li></ul></li><li>-group GRPNAME：属组</li><li>-uid UserID：UID</li><li>-gid GroupID：GID</li><li>-nouser：无属主</li><li>-nogroup：无属组</li></ul><a id="more"></a><h3 id="根据文件类型查找"><a href="#根据文件类型查找" class="headerlink" title="根据文件类型查找"></a>根据文件类型查找</h3><ul><li>-type TYPE ：<ul><li>f：普通文件</li><li>d：目录</li><li>l：链接文件</li><li>s：套接字文件</li><li>b：块设备文件</li><li>c：字符文件</li><li>p：管道文件</li></ul></li></ul><h3 id="根据文件大小查找"><a href="#根据文件大小查找" class="headerlink" title="根据文件大小查找"></a>根据文件大小查找</h3><ul><li>-size [+|-]#UNIT<ul><li><strong>#UNIT</strong>：(#-1,#)<ul><li>例子：-size 5M</li><li>大于4M小于5M的文件</li></ul></li><li><strong>-#UNIT</strong>：[0,#-1]<ul><li>例子：-size -5M</li><li>小于4M的文件</li></ul></li><li><strong>+#UNIT</strong>：(#,∞)<ul><li>例子：-size +5M</li><li>大于5M的文件</li></ul></li></ul></li></ul><h3 id="根据时间戳查找"><a href="#根据时间戳查找" class="headerlink" title="根据时间戳查找"></a>根据时间戳查找</h3><ul><li>以天为单位：<ul><li>-atime [+|-]#：访问时间<ul><li><strong>#</strong>：[#,#+1)<ul><li>例子：-atime 5</li><li>5天前且6天内访问过的文件</li></ul></li><li><strong>+#</strong>：[#+1,∞]<ul><li>例子：-atime +5</li><li>6天前访问过的文件</li></ul></li><li><strong>-#</strong>：[0,#)<ul><li>例子：-atime -5</li><li>5天内访问过的文件</li></ul></li></ul></li><li>-mtime [+|-]#：修改时间</li><li>-ctime [+|-]#：状态修改时间，指文件的权限、拥有者、所属的组、链接数发生改变时的时间</li></ul></li><li>以分钟为单位：<ul><li>-amin</li><li>-mmin</li><li>-cmin</li></ul></li></ul><h3 id="根据权限查找"><a href="#根据权限查找" class="headerlink" title="根据权限查找"></a>根据权限查找</h3><ul><li>-perm [/|-]MODE<ul><li><strong>MODE</strong>：精确权限匹配</li><li><strong>/MODE</strong>：任何一类（ugo）对象的权限中只要能一位匹配即可</li><li><strong>-MODE</strong>：每一类对象都必须同时拥有为其指定的权限标准</li></ul></li></ul><h3 id="查找后的处理动作"><a href="#查找后的处理动作" class="headerlink" title="查找后的处理动作"></a>查找后的处理动作</h3><ul><li>-print：打印显示</li><li>-ls：列出</li><li>-delete：删除</li><li>-fls /path/to/somefile：查找到的所有文件的长格式信息保存至指定文件中</li><li>-ok COMMAND {} \; ：对查找到的每个文件执行由COMMAND指定的命令，对每个文件执行命令前，都会进行交互式确认<ul><li>{}：用于引用查找到的文件名称自身</li><li>例：重命名5天内修改的文件</li><li><code>find /tmp -amin -5 -ok mv {} {}.new \</code></li></ul></li><li>-exec COMMAND {} \; ：对查找到的每个文件执行由COMMAND指定的命令</li><li>注意：find传递查找到的文件至后面指定的命令时，查找到所有符合条件的文件一次性传递给后面的命令。有些命令不能接受过多的参数，此时命令可能会失败。<ul><li>另一种方式可规避此问题：<code>find | xargs COMMAND</code></li></ul></li></ul><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><ul><li>查找/var目录下属主为root，且属组为mail的所有文件或目录</li><li><p><code>find /var -user root -group mail</code></p></li><li><p>查找/usr目录下不属于root、bin或hadoop的所有文件或目录</p></li><li><code>find /usr -not -user root -a -not -user bin -a -not -user hadoop</code></li><li><p><code>find /usr -not \( -user root -o -user bin -o -user hadoop \)</code></p></li><li><p>查找当前系统上没有属主或属组，且最近一周内曾被访问过的文件或目录</p></li><li><p><code>find / -nouser -a -nogroup -a -atime -7</code></p></li><li><p>查找/etc目录下大于1M且类型为普通文件的所有文件或目录</p></li><li><p><code>find /etc -size +1M -type f</code></p></li><li><p>查找/etc目录下所有用户都没有写权限的文件</p></li><li><p><code>find /etc -not -perm /222</code></p></li><li><p>查找/etc目录下至少有一类用户没有执行权限的文件</p></li><li><p><code>find /etc -not -perm -111</code></p></li><li><p>查找/etc/init.d目录下，所有用户都有执行权限，且其他用户有写权限的文件</p></li><li><code>find /etc/init.d -perm -113</code></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;查找命令：find&quot;&gt;&lt;a href=&quot;#查找命令：find&quot; class=&quot;headerlink&quot; title=&quot;查找命令：find&quot;&gt;&lt;/a&gt;查找命令：find&lt;/h1&gt;&lt;h3 id=&quot;根据文件名查找&quot;&gt;&lt;a href=&quot;#根据文件名查找&quot; class=&quot;headerlink&quot; title=&quot;根据文件名查找&quot;&gt;&lt;/a&gt;根据文件名查找&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;-name “filename”：支持使用glob，*，？，[]，[^]&lt;/li&gt;
&lt;li&gt;-iname “filename”：不区分大小写&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;根据属主、属组查找&quot;&gt;&lt;a href=&quot;#根据属主、属组查找&quot; class=&quot;headerlink&quot; title=&quot;根据属主、属组查找&quot;&gt;&lt;/a&gt;根据属主、属组查找&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;-user USERNAME：属主&lt;ul&gt;
&lt;li&gt;例子：find /usr -not ( -user root -o -user bin -o -user hadoop )&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-group GRPNAME：属组&lt;/li&gt;
&lt;li&gt;-uid UserID：UID&lt;/li&gt;
&lt;li&gt;-gid GroupID：GID&lt;/li&gt;
&lt;li&gt;-nouser：无属主&lt;/li&gt;
&lt;li&gt;-nogroup：无属组&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>条件测试符号总结</title>
    <link href="https://qiu-ye.github.io/2018/02/28/%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%AC%A6%E5%8F%B7%E6%80%BB%E7%BB%93/"/>
    <id>https://qiu-ye.github.io/2018/02/28/条件测试符号总结/</id>
    <published>2018-02-28T04:45:14.000Z</published>
    <updated>2018-03-09T01:51:50.983Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux系统中常用的条件测试符"><a href="#Linux系统中常用的条件测试符" class="headerlink" title="Linux系统中常用的条件测试符"></a>Linux系统中常用的条件测试符</h1><h3 id="数值测试"><a href="#数值测试" class="headerlink" title="数值测试"></a>数值测试</h3><ul><li>-gt：是否大于</li><li>-ge：是否大于等于</li><li>-eq：是否等于</li><li>-ne：是否不等于</li><li>-lt：是否小于</li><li>-le：是否小于等于</li></ul><a id="more"></a><h3 id="字符串测试"><a href="#字符串测试" class="headerlink" title="字符串测试"></a>字符串测试</h3><ul><li>=~：左侧字符串是否能够被右侧的PATTERN所匹配<ul><li>此表达式一般用于[[ ]]中</li></ul></li><li>-z：测试字符串是否为空</li><li>-n：测试字符串是否不空</li></ul><h3 id="文件测试"><a href="#文件测试" class="headerlink" title="文件测试"></a>文件测试</h3><ul><li>-a/e：存在</li><li>-b -c -d -f -h/L -p -S：块 字符 目录 普通 符号连接 管道 套接字</li><li>-r/w/x：写权限 读权限 执行权限</li><li>-g/u/k：sgid suid sticky</li><li>-s：是否存在且非空</li><li>-t：是否被打开</li><li>-N：文件自从上次被读取后是否被修改</li><li>-O：当前用户是否是文件属主</li><li>-G：当前用户是否是文件属组</li><li>FILE1 -ef FILE2：两个文件是否指向同一个设备上的同一个inode</li><li>FILE1 -nt FILE2：FILE1是否新于FILE2</li><li>FILE1 -ot FILE2：FILE1是否旧于FILE2</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Linux系统中常用的条件测试符&quot;&gt;&lt;a href=&quot;#Linux系统中常用的条件测试符&quot; class=&quot;headerlink&quot; title=&quot;Linux系统中常用的条件测试符&quot;&gt;&lt;/a&gt;Linux系统中常用的条件测试符&lt;/h1&gt;&lt;h3 id=&quot;数值测试&quot;&gt;&lt;a href=&quot;#数值测试&quot; class=&quot;headerlink&quot; title=&quot;数值测试&quot;&gt;&lt;/a&gt;数值测试&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;-gt：是否大于&lt;/li&gt;
&lt;li&gt;-ge：是否大于等于&lt;/li&gt;
&lt;li&gt;-eq：是否等于&lt;/li&gt;
&lt;li&gt;-ne：是否不等于&lt;/li&gt;
&lt;li&gt;-lt：是否小于&lt;/li&gt;
&lt;li&gt;-le：是否小于等于&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="系统运维" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="CentOS" scheme="https://qiu-ye.github.io/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Burg-基于grub的启动引导工具</title>
    <link href="https://qiu-ye.github.io/2018/02/28/Burg-%E5%9F%BA%E4%BA%8Egrub%E7%9A%84%E5%90%AF%E5%8A%A8%E5%BC%95%E5%AF%BC%E5%B7%A5%E5%85%B7/"/>
    <id>https://qiu-ye.github.io/2018/02/28/Burg-基于grub的启动引导工具/</id>
    <published>2018-02-28T01:46:29.000Z</published>
    <updated>2018-03-09T01:51:53.159Z</updated>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Burg是一款漂亮的Linux引导装载程序，它基于grub，支持图形界面，适用于多操作系统电脑的启动引导，且支持多种多样的自定义主题。</p><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-2018022818182692.png" alt="1"></p><a id="more"></a><h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h3><p>测试系统平台 Ubuntu 16.04</p><ol><li>添加PPA源<ul><li><code>sudo add-apt-repository ppa:n-muench/burg&amp;&amp;sudo apt-get update</code></li></ul></li><li>安装Burg<ul><li><code>sudo apt-get install burg burg-themes burg-emu</code></li><li>安装过程中会有几次配置界面<ul><li>前三项默认下一步<strong>&lt; OK &gt;</strong>即可。</li><li><code>GRUB install devices</code>选项中适用<code>空格</code>选择引导磁盘。</li></ul></li></ul></li><li>设置<ul><li>安装burg的主引导记录<code>sudo burg-install &quot;(hd0)&quot;</code></li></ul></li><li>主题安装<ul><li>去<a href="https://linux.linuxidc.com/linuxconf/download.php?file=Li9saW51eGZpbGVzL3B1Yi8yMDExLzEyLzIzL9TaVWJ1bnR1IDExLjEwyc+wstewNr/utqW8tsavwcG1xEJVUkfW98ziL2xpZ2h0bmVzc19mb3JfYnVyZ19ieV9zd29yaWdpbmFsLWQzMDFjdHUuemlw" target="_blank" rel="noopener">这个地址</a>下载主题<code>lightness</code>。</li><li>将下载的文件解压复制到/boot/burg/themes/中。</li><li>更新设置<code>sudo update-burg</code>。</li></ul></li><li>引导界面预览及主题设置<ul><li><code>sudo burg-emu</code></li><li>F1:帮助快捷键</li><li>t:选择主题，上下键切换，回车确认（个人认为<code>lightness</code>是最漂亮的）</li><li>F3：调整分辨率，建议重启后待burg实际运行时再调整分辨率，预览模式下可能会设置失败</li></ul></li><li>删除多余启动选项（可选）<ul><li>屏蔽多余启动项（操作有风险）<ul><li># menuentry ‘Ubuntu GNU/Linux, with Linux 4.4.0-105-generic (recovery mode)’…{}</li><li># menuentry ‘Ubuntu GNU/Linux, with Linux 4.4.0-102-generic’…{}</li><li># menuentry ‘Ubuntu GNU/Linux, with Linux 4.4.0-102-generic (recovery mode)’…{}</li></ul></li><li>将Windows系统启动项放在前面<ul><li>把 menuentry “Windows 10 (loader) (on /dev/sdb1)”…{}</li><li>放在 menuentry ‘Ubuntu GNU/Linux, with Linux 4.4.0-105-generic’…{} 即可。</li></ul></li><li>修改后要更新一下设置<ul><li><code>sudo update-burg</code></li></ul></li></ul></li><li>重启就可以看到漂亮的引导界面了<ul><li>☺</li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;Burg是一款漂亮的Linux引导装载程序，它基于grub，支持图形界面，适用于多操作系统电脑的启动引导，且支持多种多样的自定义主题。&lt;/p&gt;
&lt;h3 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://p4uvkkxs2.bkt.clouddn.com/markdown-img-paste-2018022818182692.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="系统优化" scheme="https://qiu-ye.github.io/categories/%E7%B3%BB%E7%BB%9F%E4%BC%98%E5%8C%96/"/>
    
    
      <category term="Linux" scheme="https://qiu-ye.github.io/tags/Linux/"/>
    
      <category term="Ubuntu" scheme="https://qiu-ye.github.io/tags/Ubuntu/"/>
    
      <category term="grub" scheme="https://qiu-ye.github.io/tags/grub/"/>
    
  </entry>
  
  <entry>
    <title>2017年阅读书单（四）</title>
    <link href="https://qiu-ye.github.io/2018/01/01/2017%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95(%E5%9B%9B)/"/>
    <id>https://qiu-ye.github.io/2018/01/01/2017年阅读书单(四)/</id>
    <published>2018-01-01T08:16:44.000Z</published>
    <updated>2018-02-28T11:14:10.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="十月"><a href="#十月" class="headerlink" title="十月"></a>十月</h2><h3 id="《艺术的故事》"><a href="#《艺术的故事》" class="headerlink" title="《艺术的故事》"></a>《艺术的故事》</h3><ul><li><strong>作者：</strong> 贡布里希</li><li><strong>书摘：</strong><blockquote><ul><li>实际上根本没有艺术这回事，只有艺术家，他们是些男男女女，具有惊人的天赋，善于平衡形状和色彩以达到“合适”的效果，更稀罕的是具有正直性格的人，他们不肯在半途止步，时刻准备放弃所有唾手可得的效果，放弃所有表面上的成功，去踏踏实实地经历工作中的辛劳和痛苦，我们相信永远都会有艺术家诞生。但是会不会也有艺术？这在同样大的程度上，也有赖于我们自己，也就是艺术家的公众。通过我们的冷漠或我们的关心，通过我们的成见或我们的理解，我们还是可以决定事情的结局。恰恰是我们自己，必须保证传统的命脉不致中断，保证艺术家仍然有机会去丰富那串宝贵的珍珠，那是往昔留给我们的传家之宝。</li></ul></blockquote></li></ul><a id="more"></a><ul><li><strong>评价：</strong><ul><li>炒鸡经典的艺术史著作，真正意义上的艺术启蒙课。整个国庆假期徜徉在一幅幅画作，一件件雕塑之中，感受艺术的的美。砖一样厚的书中，囊括了整个西方艺术史，高清的画作扫描照片，带来犹如亲自去博物馆参观的体验，感到不虚此宅。作者用专业但不深奥的语言向读者娓娓道来，教会读者如何去评价一件艺术品。</li></ul></li></ul><h3 id="《送你一颗子弹》"><a href="#《送你一颗子弹》" class="headerlink" title="《送你一颗子弹》"></a>《送你一颗子弹》</h3><ul><li><strong>作者：</strong> 刘瑜</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>读与“延安整风”相关的著作，读来读去，结论只是：一切洗脑的成功要旨，不过在于帮助人们逃避自由。当一个体系能够用逻辑自洽的方式替你回答一切问题、并且保证这些答案的光荣伟大正确的时候，的确，为什么还要去承受“肩负自由的疲惫”呢？</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>和书中的很多观点产生共鸣，作者考虑问题的角度很新颖，会继续关注其他作品。</li></ul></li></ul><h2 id="十一月"><a href="#十一月" class="headerlink" title="十一月"></a>十一月</h2><h3 id="《巨人的陨落》"><a href="#《巨人的陨落》" class="headerlink" title="《巨人的陨落》"></a>《巨人的陨落》</h3><ul><li><strong>作者：</strong> 肯·福莱特</li><li><strong>评价：</strong><ul><li>同下</li></ul></li></ul><h2 id="十二月"><a href="#十二月" class="headerlink" title="十二月"></a>十二月</h2><h3 id="《世界的凛冬》"><a href="#《世界的凛冬》" class="headerlink" title="《世界的凛冬》"></a>《世界的凛冬》</h3><ul><li><strong>作者：</strong> 肯·福莱特</li><li><strong>评价：</strong><ul><li>一套精彩的大部头小说。为了讲清第一次世界大战时期各国势力的错综变化，作者塑造了多个人物形象，但这些人物的设置大多数时间只是服务于故事，受限于作品长度，没有在人物性格成长方面着墨太多，因此显得都很平面化。当然作者对架构的掌控能力是相当强的，另外福莱特的作品请专业的历史学家背书，像历史小品一样描绘几个关键的历史转折点。波澜壮阔的展现了裹挟在历史洪流中，人们的命运波折。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;十月&quot;&gt;&lt;a href=&quot;#十月&quot; class=&quot;headerlink&quot; title=&quot;十月&quot;&gt;&lt;/a&gt;十月&lt;/h2&gt;&lt;h3 id=&quot;《艺术的故事》&quot;&gt;&lt;a href=&quot;#《艺术的故事》&quot; class=&quot;headerlink&quot; title=&quot;《艺术的故事》&quot;&gt;&lt;/a&gt;《艺术的故事》&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;作者：&lt;/strong&gt; 贡布里希&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;书摘：&lt;/strong&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;实际上根本没有艺术这回事，只有艺术家，他们是些男男女女，具有惊人的天赋，善于平衡形状和色彩以达到“合适”的效果，更稀罕的是具有正直性格的人，他们不肯在半途止步，时刻准备放弃所有唾手可得的效果，放弃所有表面上的成功，去踏踏实实地经历工作中的辛劳和痛苦，我们相信永远都会有艺术家诞生。但是会不会也有艺术？这在同样大的程度上，也有赖于我们自己，也就是艺术家的公众。通过我们的冷漠或我们的关心，通过我们的成见或我们的理解，我们还是可以决定事情的结局。恰恰是我们自己，必须保证传统的命脉不致中断，保证艺术家仍然有机会去丰富那串宝贵的珍珠，那是往昔留给我们的传家之宝。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://qiu-ye.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="阅读" scheme="https://qiu-ye.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>2017年阅读书单（三）</title>
    <link href="https://qiu-ye.github.io/2018/01/01/2017%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95(%E4%B8%89)/"/>
    <id>https://qiu-ye.github.io/2018/01/01/2017年阅读书单(三)/</id>
    <published>2018-01-01T08:16:20.000Z</published>
    <updated>2018-02-28T11:14:08.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="七月"><a href="#七月" class="headerlink" title="七月"></a>七月</h2><h3 id="《苏东坡传》"><a href="#《苏东坡传》" class="headerlink" title="《苏东坡传》"></a>《苏东坡传》</h3><ul><li><strong>作者：</strong> 林语堂</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>书法为中国绘画提供其技巧与美的原理，诗则提供画的精神与气韵情调的重要，以及对大自然的声色气味泛神性的喜悦。</li></ul></blockquote><blockquote><ul><li>艺术上所有的问题，都是节奏的问题，不管是绘画、雕刻、音乐，只要美是运动（美感便是律动感），每种艺术形式就有隐含的节奏。</li></ul></blockquote><blockquote><ul><li>这种政争之中也有些规则，不过主要在幕后进行时遵守而已。第一条是，一个高明的政客必然要精通一条艺术手法：那就是要多说话，但内容必须空洞。高明的官员永远不说出什么，但是只要否认。高明的官员必须深有修养，长于说“无可奉告”、“阁下所说，诚然不错！”这样便大有前途了。第二天，他必须讨好朋友。第三条是，当特别提防开罪于人。守口如瓶，低声而斯文，使人高兴地窃窃私语，全心全意讨好于人，此等官员，纵然不能爬到宰相之位，至少不会投置闲散，早晚会积劳成疾，因公殉职。</li></ul></blockquote><blockquote><ul><li>苏东坡的人品，具有一个多才多艺的天才的深厚、广博、诙谐，有高度的智力，又天真烂漫的赤子之心——正如耶稣所说具有蛇的智慧，兼有鸽子的温柔敦厚，在苏东坡这些方面，其他诗人是不能望其项背的。这些品质之荟萃于一身，是天地间的凤毛麟角，不可数见的。</li><li>苏东坡已死，他的名字只是一个记忆。但是他留给我们的，是他那心灵的喜悦，是他那思想的快乐，这才是万古不朽的。</li></ul></blockquote><blockquote><ul><li>苏东坡一生的经历，根本是他本性的自然流露。在玄学上，他是个佛教徒。他知道生命是某种东西刹那间的表现，是永恒的精神在刹那之间存在躯壳之中的形式，但是他却不肯接受人生是重担、是苦难的说法——他认为那不尽然。至于他自己本人，是享受人生的每一刻时光。在玄学方面，他是印度教的思想，但是在气质上，他却是道地的中国人的气质。从佛教的否定人生，儒家的正视人生，道家的简化人生，这位诗人在心灵识见中产生了他的混合的人生观。人生最长也不过三万六千日，但是那已然够长了；即使他追寻长生不死的仙丹露药终成泡影，人生的每一刹那，只要连绵不断，也就美好可喜了。他的肉体虽然会死，他的精神在下一辈子，则可成为天空的星、地上的河，可以闪亮照明，可以滋润营养。因而维持众生万物。这一生，他只是永恒在刹那显现间的一个微粒，他究竟是哪一个微粒，有何关乎重要？所以生命毕竟是不朽的、美好的，所以他尽情享受人生。这就是这为旷古奇才乐天派的奥秘的所在。</li></ul></blockquote></li></ul><a id="more"></a><ul><li><strong>评价：</strong><ul><li>苏东坡是本人最喜欢的一个古人。他历了坎坷的一生，然而却怀着一颗赤子之心将之解构为精彩的一生。他在诗词，散文，书法，绘画的领域均展露出绝妙的才华，作为士人领袖，更是在一段时间里引领了中华文化的发展方向。他的才华，他的人品，他的精神境界无一不令人折服。正如林语堂先生所评价的，其具有蛇的智慧，兼有鸽子的温柔敦厚。苏东坡最打动我的是他的人生哲学。他用一生时间求索生命的意义，从佛教的否定人生，儒家的正视人生，道家的简化人生，这位诗人在心灵识见中产生了他的混合的人生观。和许多追寻真理的人不同，东坡先生不是一个殉道者，他虽然也曾迷茫，也曾恐惧，但在求知的漫漫长途中，他常常以超然物外的心态面对挫折，同时以包容万物的胸怀接纳命运，接纳自己。寻找诗和远方的时候，又应该如何面对眼前的苟且呢？苏子给出了他的答案：“客亦知夫水与月乎？逝者如斯，而未尝往也；盈虚者如彼，而卒莫消长也。盖将自其变者而观之，则天地曾不能以一瞬；自其不变者而观之，则物与我皆无尽也，而又何羡乎！且夫天地之间，物各有主，苟非吾之所有，虽一毫而莫取。惟江上之清风，与山间之明月，耳得之而为声，目遇之而成色，取之无禁，用之不竭，是造物者之无尽藏也，而吾与子之所共适”。妙不可言，妙不可言！</li></ul></li></ul><h2 id="八月"><a href="#八月" class="headerlink" title="八月"></a>八月</h2><h3 id="《嫌疑人X的献身》"><a href="#《嫌疑人X的献身》" class="headerlink" title="《嫌疑人X的献身》"></a>《嫌疑人X的献身》</h3><ul><li><strong>作者：</strong> 东野圭吾</li><li><strong>评价：</strong><ul><li>精彩的作品！故事，文笔，架构均为上乘。有的爱如清风拂面，令人心旷神怡；有的爱如重枷锁链，令人不堪其负。打着爱名义断然替别人做决定，往往只会造成悲剧。</li></ul></li></ul><h3 id="《未来简史》"><a href="#《未来简史》" class="headerlink" title="《未来简史》"></a>《未来简史》</h3><ul><li><strong>作者：</strong> 尤瓦尔·赫拉利</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>胜利几乎永远属于合作更顺畅的一方，；这不只适用于人与动物的争斗，也适用于人与人之间的冲突。因此，罗马之所以征服希腊，不是因为罗马人的脑子更大或制造工具的技术更先进，而是因为他们的合作更高效。纵观历史，纪律严明的军队就是能击败散兵游勇，志同道合的精英就是能主导无序大众。例如在1914年，为数仅300万的俄国贵族、官员和商人就能作威作福，控制超过1.8亿农民和工人。俄国精英熟知如何合作守卫其共同利益，但那1.8亿平民却无法有效动员。事实上，那些精英有一大部分的努力重点，正是要确保这1.8亿底层民众无法学会合作。</li></ul></blockquote><blockquote><ul><li>政治玩家唯一有的就是良好的组织能力。</li></ul></blockquote><blockquote><ul><li>传统认为是伟大的宇宙计划，为人类生活带来意义，但人文主义让角色逆转，认为是人类体验为宇宙赋予了意义。根据人文主义的观点，人类必须从自己的内在体验找出意义，而不仅仅是自己的意义，更是整个宇宙的意义，就是人文主义的主要训诫，为无意义的世界创造意义。</li></ul></blockquote><blockquote><ol><li>科学正在逐渐聚合在一个无所不包的教条之中，也就是认为所有生物都是算法，而生命则是进行数据处理。</li><li>智能正与意识脱钩。</li><li>无意识但具备高度智能的算法，可能很快就会比我们更了解我们自己。</li></ol><p><strong>这三项发展提出了三个关键问题，希望读者在读完本书之后，仍能常挂于心：</strong></p><ol><li>生物真的只是算法，而生命也真的只是数据处理吗？</li><li>智能和意识，究竟哪一个才更有价值？</li><li>等到无意识但具备高度智能的算法比我们更了解我们自己时，社会、政治和日常生活将会有什么变化？</li></ol></blockquote></li></ul><h3 id="《战争就是这么回事》"><a href="#《战争就是这么回事》" class="headerlink" title="《战争就是这么回事》"></a>《战争就是这么回事》</h3><ul><li><strong>作者：</strong> 袁腾飞</li><li><strong>评价：</strong><ul><li>袁腾飞讲一战史，二战史上下，丰富知识架构的书。关于书没有其他可说的，但是关于战争下面一段话我深表认同，动不动就嚷嚷着要打仗的那些键盘侠，他们<strong>既不懂的战的代价，又不懂得争的意义</strong>。<blockquote><p>如果说有纯粹的魔鬼，那就是民族主义的仇恨和愤怒。它和极端宗教一起，是撒旦的左膀右臂，总有人要挥舞起它的大旗来达到目的：激发出我们最坏的一面，教唆我们抛弃人类文明的情感，回到野蛮中去。更加可拍的是，这场我们参与其中的洪流一旦形成，醒悟已晚，只能任其裹挟直到灭亡。</p><p>时至今日，如果有人告诉我们他能让我们的世界变好，请保持怀疑；</p><p>如果有神指明了我们的敌人，请保持怀疑；</p><p>如果有任何人试图让我们仇恨和愤怒，请保持怀疑。</p><p>只有每一个人不把自己的命运交到别人手中，才有可能避免这肉体和精神的毁灭。一旦放手，我们无法选择让自己成为正义的一方，因为杀戮就是杀戮，本无正义可言。</p></blockquote></li></ul></li></ul><h3 id="《黑客与画家》"><a href="#《黑客与画家》" class="headerlink" title="《黑客与画家》"></a>《黑客与画家》</h3><ul><li><strong>作者：</strong> Paul Graham</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>自由思考比畅所欲言更重要。如果你感到一定要跟那些人辩个明白，绝不咽下这口气，一定要把话说清楚，结果可能是从此你再也无法自由理性地思考了。我认为这样并不可取，更好的办法是在思想和言论之间划一条明确的界限。在心里无所不想，但是不一定要说出来。</li><li>人们喜欢讨论的许多问题实际上是很复杂的，马上说出你的想法对你并没有什么好处。</li></ul></blockquote><blockquote><ul><li>做出伟大产品的公司，自我评价往往以“批评和“自嘲”为主，而不是以“肯定”和“表扬”为主。我认识的杰出成就人士都认为自己做得不好，之所以能成功只是因为其他人做的更差。</li><li>真实世界的关键并非在于它是由成年人组成的，而在于它的庞大规模使得你做的每一件事都能产生真正意义上的效果。</li></ul></blockquote><blockquote><ul><li>程序写出来是给人看的，附带能在机器上运行。——《计算机程序的结构与解释》卷首语</li></ul></blockquote><blockquote><ul><li>好设计是简单的设计(<strong>美依赖于一些精心选择的结构性元素，而不依赖于表面装饰品的堆砌。当你被迫把东西做的简单时，你就被迫直接面对真正的问题。当你不能用表面的装饰交差时，你就不得不做好真正的本质部分</strong>)</li><li>好设计是永不过时的设计(<strong>如果解决方法是丑陋的，那就肯定还有很好的解决方法，只是还没有发现而已</strong>)</li><li>好设计是解决主要问题的设计(<strong>功能应当决定形式—包豪斯学派</strong>)</li><li>好设计是启发性的设计</li><li>好设计通常是有点趣味性的设计(<strong>幽默一定程度上反映了力量</strong>)</li><li>好设计是艰苦的设计(<strong>如果你工作的不艰苦，你可能正在浪费时间</strong>)</li><li>好设计是看似容易的设计(<strong>在大量练习的前提下，面对难题时，释放你的直觉</strong>)</li><li>好设计是对称的设计（<strong>重复性对称和递归性对称，对称的危险在于它可以取代思考，在大量使用重复的时候这种危险性更大</strong>）</li><li>好设计是模仿大自然的设计(<strong>大自然在长期的演化中已经解决了很多设计问题</strong>)</li><li>好设计是一种再设计(<strong>扔掉早期原型是需要信心的，你必须有本事看出什么地方还可以改进</strong>)</li><li>好设计是能够复制的设计（<strong>把事情作对比原创更重要</strong>）</li><li>好设计常常是奇特的设计(<strong>追求做出好作品，完成之后再回头看</strong>)</li><li>好设计是成批出现的(<strong>某种程度上，你个人最多可以对趋势产生影响，但是你不可能决定趋势，实际上是趋势决定了你</strong>)</li><li>好设计常常是大胆的设计(<strong>单单是无法忍受丑陋的东西还不够，只有对这个领域非常熟悉，你才可能发现哪些地方可以动手改进。优秀作品的秘诀就是：非常严格的品位，再加上实现这种品位的能力</strong>)</li></ul></blockquote></li></ul><h2 id="九月"><a href="#九月" class="headerlink" title="九月"></a>九月</h2><h3 id="《我是猫》"><a href="#《我是猫》" class="headerlink" title="《我是猫》"></a>《我是猫》</h3><ul><li><strong>作者：</strong> 夏目漱石</li><li><strong>评价：</strong><ul><li>饶有趣味！</li></ul></li></ul><h3 id="《浮生六记》"><a href="#《浮生六记》" class="headerlink" title="《浮生六记》"></a>《浮生六记》</h3><ul><li><strong>作者：</strong> 沈复</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>余曰：恐卿鬓斑之日，步履已艰。芸曰：今世不能，期以来世。余曰：来世卿当作男，我以女子相从。芸曰：必得不昧今生，方觉得有情趣。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>芸娘被林语堂赞美为“中国文学及中国历史上一个最可爱的女人”。若得妻如芸娘，夫复何求!</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;七月&quot;&gt;&lt;a href=&quot;#七月&quot; class=&quot;headerlink&quot; title=&quot;七月&quot;&gt;&lt;/a&gt;七月&lt;/h2&gt;&lt;h3 id=&quot;《苏东坡传》&quot;&gt;&lt;a href=&quot;#《苏东坡传》&quot; class=&quot;headerlink&quot; title=&quot;《苏东坡传》&quot;&gt;&lt;/a&gt;《苏东坡传》&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;作者：&lt;/strong&gt; 林语堂&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;书摘：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;书法为中国绘画提供其技巧与美的原理，诗则提供画的精神与气韵情调的重要，以及对大自然的声色气味泛神性的喜悦。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;艺术上所有的问题，都是节奏的问题，不管是绘画、雕刻、音乐，只要美是运动（美感便是律动感），每种艺术形式就有隐含的节奏。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;这种政争之中也有些规则，不过主要在幕后进行时遵守而已。第一条是，一个高明的政客必然要精通一条艺术手法：那就是要多说话，但内容必须空洞。高明的官员永远不说出什么，但是只要否认。高明的官员必须深有修养，长于说“无可奉告”、“阁下所说，诚然不错！”这样便大有前途了。第二天，他必须讨好朋友。第三条是，当特别提防开罪于人。守口如瓶，低声而斯文，使人高兴地窃窃私语，全心全意讨好于人，此等官员，纵然不能爬到宰相之位，至少不会投置闲散，早晚会积劳成疾，因公殉职。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;苏东坡的人品，具有一个多才多艺的天才的深厚、广博、诙谐，有高度的智力，又天真烂漫的赤子之心——正如耶稣所说具有蛇的智慧，兼有鸽子的温柔敦厚，在苏东坡这些方面，其他诗人是不能望其项背的。这些品质之荟萃于一身，是天地间的凤毛麟角，不可数见的。&lt;/li&gt;
&lt;li&gt;苏东坡已死，他的名字只是一个记忆。但是他留给我们的，是他那心灵的喜悦，是他那思想的快乐，这才是万古不朽的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;苏东坡一生的经历，根本是他本性的自然流露。在玄学上，他是个佛教徒。他知道生命是某种东西刹那间的表现，是永恒的精神在刹那之间存在躯壳之中的形式，但是他却不肯接受人生是重担、是苦难的说法——他认为那不尽然。至于他自己本人，是享受人生的每一刻时光。在玄学方面，他是印度教的思想，但是在气质上，他却是道地的中国人的气质。从佛教的否定人生，儒家的正视人生，道家的简化人生，这位诗人在心灵识见中产生了他的混合的人生观。人生最长也不过三万六千日，但是那已然够长了；即使他追寻长生不死的仙丹露药终成泡影，人生的每一刹那，只要连绵不断，也就美好可喜了。他的肉体虽然会死，他的精神在下一辈子，则可成为天空的星、地上的河，可以闪亮照明，可以滋润营养。因而维持众生万物。这一生，他只是永恒在刹那显现间的一个微粒，他究竟是哪一个微粒，有何关乎重要？所以生命毕竟是不朽的、美好的，所以他尽情享受人生。这就是这为旷古奇才乐天派的奥秘的所在。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://qiu-ye.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="阅读" scheme="https://qiu-ye.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>2017年阅读书单（二）</title>
    <link href="https://qiu-ye.github.io/2018/01/01/2017%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95(%E4%BA%8C)/"/>
    <id>https://qiu-ye.github.io/2018/01/01/2017年阅读书单(二)/</id>
    <published>2018-01-01T08:15:56.000Z</published>
    <updated>2018-02-28T11:14:12.198Z</updated>
    
    <content type="html"><![CDATA[<h2 id="四月"><a href="#四月" class="headerlink" title="四月"></a>四月</h2><h3 id="《七日谈：来自民间的中日对话录》"><a href="#《七日谈：来自民间的中日对话录》" class="headerlink" title="《七日谈：来自民间的中日对话录》"></a>《七日谈：来自民间的中日对话录》</h3><ul><li><strong>作者：</strong> (中)山奇 (日)加藤嘉一</li><li><p><strong>评价：</strong></p><ul><li>副标题是“来自民间的中日对话录”，首先它确实很“民间”，像两个国家的朋友之间的聊天，内容挺丰富，缺点是不深刻，很多问题虽然有提及，但也都是浮于表面。可以作为消遣。</li></ul></li></ul><a id="more"></a><h3 id="《一句顶一万句》"><a href="#《一句顶一万句》" class="headerlink" title="《一句顶一万句》"></a>《一句顶一万句》</h3><ul><li><strong>作者：</strong> 刘震云</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>一个人的孤独不是孤独，一个人找另一个人，一句话找另一句话，才是真正的孤独。</li><li>有些人说得着，有些人说不得着；有些人现在说不得着，将来或许能说得着；有些人现在说得着，将来未必能说得着；有些人这一辈子也说不得着。找一个能说得着的人过一辈子是福分，不管是爱人、朋友还是亲人。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>一本醇厚的书。书里絮絮叨叨，像村口老大爷晒着太阳抽着旱烟给小孩子讲他的一生，但却没来由的读着亲切，舒服。再加上书中的延津离我老家很近，好多书中的方言俚语和我们那里都是互通的，更是营造了一种置身其中的氛围。起初觉得这是本很轻松的书，讲述街头小贩的家长里短，然而随着情节逐渐深入，一丝丝苦涩便慢慢晕开。何为知己？伯牙子期，高山流水？这是绝大多数知识分子都向往的精神境界。而对于老百姓来说，所谓知己，无非是说得着（聊得来）的两个人。只要一个人找到另一个人，一句话找到另一句话，那生活中的琐碎、无助、痛苦、焦虑，便都可以承受，受伤的心总能得到慰藉。这种心理诉求宛如中国人的”宗教”，只不过扮演牧师的，是能说的着的那个人。一个人的孤独不是孤独，一个人找另一个人，一句话找另一句话，才是真正的孤独。</li></ul></li></ul><h2 id="五月"><a href="#五月" class="headerlink" title="五月"></a>五月</h2><h3 id="《人民的名义》"><a href="#《人民的名义》" class="headerlink" title="《人民的名义》"></a>《人民的名义》</h3><ul><li><strong>作者：</strong> 周梅森</li><li><p><strong>评价：</strong></p><ul><li>没有看剧，为了节约时间才选择看的小说。以前从没有看过中国官场政治类的小说，题材上对我来说还是很新颖的，总体来说是一本不错的书，但谈不上是优秀的作品。时隔半年，剧情已经很模糊了，这部作品让我印象深刻的反而是，它带出了一个比较有趣的问题。关于电视剧，虽然没有选择全部追完，但也还是看了一些各方媒体吹捧的所谓“演技炸裂”的桥段。额(⊙o⊙)…这…怎么就演技炸裂了，某段戏这么演不应该是很正常的事情吗？中国现在的影视圈行业已经到了，某个演员有演技都能成为宣传噱头的地步。把几个有演技的演员凑在一起，就足以让全国观众高潮了。喂(⊙o⊙)…“演员”的基本要求不应该就是有演技吗？即使“演技”这种东西无法量化，但演员作为一种职业也有其职业要求的。一位医生想得到“医术炸裂”级别的赞扬，怕是要勤勤恳恳地将其一生时光奉献给自己的工作。《人民的名义》引发的这一波观剧热潮，一方面反映出了国产电视剧糟糕的现状，使得观众很难看到优秀作品，以至于遇到及格线以上的作品，便奉为神剧，奔走相告。而另一方面也反映出观众对演员“演技”的认可程度达到一种新高，只靠出卖皮相的流量明星，还想板着脸扣扣图就能把观众糊弄过去，已经越来越难了。只是希望中国观众能对演员有更多的要求，不要动不动就这个炸裂那个炸裂，稍微用点心好好表演就“演技炸裂”了，你们又让那些真正的表演艺术家们情何以堪。</li></ul></li></ul><h3 id="《禅与摩托车维修艺术》"><a href="#《禅与摩托车维修艺术》" class="headerlink" title="《禅与摩托车维修艺术》"></a>《禅与摩托车维修艺术》</h3><ul><li><strong>作者：</strong> 罗伯特·M·波西格</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>“佛陀或是耶稣坐在电脑和变速器的齿轮旁边修行会像坐在山顶和莲花座上一样自在。如果情形不是如此，那无异于亵渎了佛陀——也就是亵渎了你自己。”</li></ul></blockquote><blockquote><ul><li>从某个角度看，浪漫的人对于理性的诅咒，主要是因为理性把人类从原始的状态当中提升起来，他是这样有力而又主宰了一切，因而排除了其他所有的一切，完全控制了人自己，这就是抱怨的来由。（此处的抱怨是指相比于原始时代人类生活方式退步的言论）</li><li>古典的认识认为这个世界是由一些基本形式组成的，而浪漫的认识则是从它的表象来观察。如果你拿一部发动机或是机械图，或是电子仪表给浪漫的人看，他一定不感兴趣，因为他看到的只是表象，枯燥无味，只是列出一大堆复杂的专有名词、线条、和数字，没有让他觉得有趣。但是如果你把这些东西拿给一个偏向古典思想的人看，他会仔细的观察，然后就会着迷，因为他看到在这些线条和符号之后是丰富的基本形式。</li><li>浪漫的模式主要有丰富的灵感、想象力、创造力和直觉。最主要的是情感而非事实。和科学相对的艺术往往就是很浪漫的，它的存在不依赖与理性或是法则，而是依赖于感情直觉和美学。在北欧的文化当中，浪漫往往和女性有关，但这并不是必然的现象。</li><li>相对的，古典的思想往往依赖于理性和法则——它们是思想和行为的基本形式，在欧洲的文化当中主要与男性有关，同时科学、法律、医药等学科都受到了古典思想的影响，因此对大部分的女性来说毫无吸引力。所以虽然骑摩托车旅行是件很浪漫的事，但是要维修、保养摩托车却全然是古典的行为。修理车子的时候，必然会弄脏手。而且全身都是油污，这些基本形式往往和浪漫的精神相冲突，因而女性很不喜欢这样。</li><li>虽然在古典的认识方式当中，它的表象通常是丑陋的，但是这不是天生的。浪漫的人往往会忽略古典的美感，因为它出现得非常微妙。古典的风格往往直截了当而且完全不加修饰，不情绪化，简洁，有严谨的比例，它的目的并不是要引发别人情绪上的波动，而是要从混乱中找出秩序，所以它的风格并不自由也不自然，反而要求的是规规矩矩，所有的一切都在控制之下，而它的价值标准在于控制技巧的高低。</li><li>对于一个浪漫的人来说，这种古典的方式往往显得沉闷，呆滞而且丑陋。就像保养车子一样，车子的一切都可以分解成零部件和它们之间的关系。所有的一切都必须经过测量和证明，这就给人一种沉重的压迫感，一种永无止尽的灰暗，这就是一股死亡的势力。</li><li>对于一个古典的人来说，浪漫的人轻浮而没有理性，心情起伏不定，不值得信任，只对享乐感兴趣，是一种肤浅的人，就像寄生虫一样没有内涵，无法养活自己，是社会的负担。从这里我们就差不多可以看出他们彼此之间的冲突了。</li><li>这就是问题的根源，人在思考和感觉的时候往往会偏向于某种形式，而且会误解和看轻看轻另一种形式，然而没有人会放弃自己所看到的真理，就我所知，目前还没有人可以真正融合两者，因为这两者之间根本找不到交汇点。</li><li>所以在近代古典和浪漫的文化之间，产生了严重的冲突——这两个世界逐渐分离，相互仇视，所有的人都在怀疑是否要继续这样发展下去，事实上没有人希望如此——不论他的敌手怎么想。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>这绝对是一本被名字耽误的好书。作者罗伯特·M·波西格是一位神人，被誉为70年代的梭罗。出于对理性和浪漫的追求，罗伯特·M·波西格同时汲取科学和人文的养分。他15岁进入明尼苏达大学主修化学，后又学习哲学，之后在该校攻读传播学硕士；他曾到印度伯纳雷斯印度大学学习东方哲学，并担任修辞学教授。在追求真理的过程中，因为西方倡导的二元对立与二分法带来的分裂而困扰不已，因而一直试图寻找支离破碎的文化的整合之道，这些问题长久折磨着他并让他焦虑又烦躁。1961年他被诊断为偏执型精神分裂症和临床忧郁症，被多次送进医院。1963年起接受了多达28次的休克疗法，在此期间妻子与他离婚。后来他终于不再执着于自己的理论并且出院，转而开始潜心写作来表达自己的想法。1968年他与长子克里斯一起骑着摩托车从双子城出发，在中西部旷野、洛矶山区和西海岸从事心灵探险。他希望从狭窄而受限的自我解脱，于是才开始这场横跨美国大陆的万里长旅，一路经过复杂经验与反省思考，终于恢复了自我的完整。本书讲述的就是他和儿子在旅行时的所思所想，里面蕴含着他花费半生对理性与浪漫的对立统一所做的思考，严谨又不失优雅。是一本能引发人深深地思考的书。五星推荐。</li></ul></li></ul><h3 id="《吾国与吾民》"><a href="#《吾国与吾民》" class="headerlink" title="《吾国与吾民》"></a>《吾国与吾民》</h3><ul><li><strong>作者：</strong> 林语堂</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>一个强烈底决心，以摄取人生至善至美；一股殷热的欲望，以享乐一身之所有，但倘令命该无福可享，则亦不怨天尤人。这是中国人“知足”的精义。</li></ul></blockquote><blockquote><ul><li>在巩固民族持续力的文化力量中，最有价值者，当首推中国字之家族制度，盖其组织既已十分完密，原则又阐明至为详细，故任何人均不能忘却本人祖系之所属。</li><li>另一巩固中国社会机构的文化力量，为中国社会上固定阶级之完全不存在。因是地位晋升之机会绝对公开，人人得经由考试制度以取功名。</li><li>家族制度的存在，使子孙繁育，扩大民族之量，而考试制度之实行，则选拔才智，鼓励求学，提高民族之质，二者相辅而行，使中华民族永久长存，不可灭息。</li></ul></blockquote><blockquote><ul><li>这种意识是很深地种植于中国人的心坎中，其罪恶不只限于官僚，却是像榕树的根盘四射，延展可及数里之遥。又像榕树的顶盖，它向四面展射其寒冷的阴影，掩蔽一切走到它树下来的人。吾们中国人不欲与此大榕树斗争，而却趋躲它的荫盖之下。吾们不会弹劾官吏，像美国人；也不会焚烧富人屋宇，像布尔什维克党人。吾们只想做做权势人家的守门人，沾沾他们官势的光。</li><li>中国的官僚社会可以比之于生在山巅上的榕树。经过一番调整的作用之后，大家都在向日光的方面争取一席之地，既已得之，则互相安静地过日子。（补充：俗语有云：谁家没有几门富贵亲戚。即可论证中国没有固定的社会阶级，只有不同家族之升降，依各家财产的兴败为准则。上层奴才与下层奴才，二者彼此互有沉浮。）有几颗站在机会比之别棵较优越的地位，他们彼此都是互相会护着的——中国有句俗语，叫做“官官相护”。普通平民可比之于泥土，所以培养这些树木，供给它们种种营养质料，俾使之生长。如孟子当其辩护君子小人之别时所说：“齐景公问政于孔子，孔子对曰：‘君君臣臣父父子子。’公曰：‘善哉，信如君不君，臣不臣，父不父，子不子，虽有栗，吾得而食诸？’”如是。那些树木上乘日光旭照，下接土地气液之营养，因以发育繁滋。有些树木比较来得繁荣，它从泥土中吸收较多汁液，而人民坐在它们的荫蔽之下欣赏其茂密的绿叶者，不知此乃吸收土地之汁液而荣发者。</li></ul></blockquote><blockquote><ul><li>人生譬如一处滑稽剧。有时还是做一个旁观者，静观而微笑，胜如自身参与一分子。像一个清醒了的幻梦者，吾们的观察人生，不是戴上隔夜梦景中的幻想的色彩，而是用较清明的眼力。吾们倾向于放弃不可捉摸的未来而同时把握住少数确定的事物，吾们知道可以给予幸福于吾人者，吾们常常反求之于自然，以自然为真善美永久幸福的源泉。丧失了进步与国力，吾们还是很悠闲自得的生活着，轩窗敞启，听金蝉曼唱，微风落叶，爱篱菊之清芳，赏秋月之高朗，吾们便很满足。</li><li>因为吾们的民族生命真已踏进了新秋时节。在吾们的生命中，民族的和个人的，临到了一个时期，那时秋的景色已弥漫笼罩了吾们的生命，青绿混合了金黄的颜色，忧郁混合了愉快的情绪，而希望混合着回想。在吾们的生命中临到一个时期，那时春的烂漫，已成过去的回忆；夏的茂盛，已成消逝歌声的余音，只剩微弱的回响。当吾们向人生望出去，吾们的问题不是怎样生长，却是怎样切实的生活；不是怎样努力工作，而是怎样享乐此宝贵为欢乐之一瞬；不是怎样使用其精力，确实怎样保藏它以备即将来临的冬季。一种意识，似已达到了一个地点，似已决定并寻获了我们所要的。一种意识似已成功了什么，比之过去的茂盛，虽入小巫见大巫，但仍不失为一些东西，譬如秋天的林木，虽已剥落了盛夏的葱郁，但仍不失林木的本质而将永续无穷。</li><li>我爱好春，但是春太柔嫩；我爱好夏，但夏太荣夸。因是我最爱好秋，因为她的叶子带一些黄色，调子格外柔和，色彩格外浓郁，它又染上一些忧郁的神采和死的预示。它的金黄的浓郁，不是表现在春的烂漫，不是表现在夏的盛力，而是表现逼近老迈的圆熟与慈和的智慧。它知道人生的有限，故知足而乐天。从此“人生有限”的知识与丰富的经验，出现一种色彩的交响曲，比一切都丰富，它的青表现生命与力，它的橘黄表现金玉的内容，紫表现消极与死亡。明月辉耀于它的上面，它的颜色好像为了悲愁的回忆而苍白了，但是当落日余晖接触的时候，它仍能欣然而笑。一阵新秋的金风掠过，木叶愉快地废物而摇落，你真不知落叶的歌声是欢笑的歌声还是黯然销魂的歌声。这是新秋精神的歌声。平静、智慧、圆熟的精神，它微微笑着忧郁而赞美兴奋、锐敏、冷静的态度——这种秋的精神曾经辛弃疾美妙地歌咏过：</li><li><center>少年不识愁滋味，</center></li><li><center>爱上层楼，爱上层楼，</center></li><li><center>为赋新词强说愁。</center></li><li><center>而今识尽愁滋味，</center></li><li><center>欲说还休，欲说还休，</center></li><li><center>却道天凉好个秋。</center></li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>“我堪能坦白地直陈一切，因为我心目中的祖国，内省而不疚，无愧于人。我堪能暴呈她的一切困恼纷扰，因为我未尝放弃我的希望。中国乃伟大过于她的微渺的国家，无需乎他们的粉饰。她将调整她自己，一如过去历史上所昭示吾人者。”这是林语堂在自序里的一段话，每次念及，总会热泪盈眶。我爱你中国，亲爱的母亲，我为你流泪，也为你自豪。</li></ul></li></ul><h3 id="《万物生长》"><a href="#《万物生长》" class="headerlink" title="《万物生长》"></a>《万物生长》</h3><ul><li><strong>作者：</strong> 冯唐</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>我总结出一个鉴别骗子的简单方法：如果有人问你，想不想知道如何不花钱、省钱、不费力气挣大钱，他一定是要骗你钱。如果有人问你，想不想知道什么是世界本源，什么是你的前世和来生，他一定是要骗你的灵魂。如果有人问你想不想知道世界到底是谁的，到底如何才算公平，他一定是要骗你十年的生命。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>可能是期望太高了，读起来落差有点大，感觉一般般。和王小波类似，冯唐的小说个人风格很明显，带着浓浓的北京土著的痞气，全篇充满着荷尔蒙的气息。同样是校园青春题材，相较于《万物生长》的热烈，个人还是更喜欢《此间的少年》的含蓄温雅。现在越来越不愿读青春题材的作品了，遥想高中的时候，还时常捧着书憧憬属于自己的花前月下，而到如今，青春已经被狗啃的差不多了，也没有等到粉红色的浪漫。哪怕安慰自己幸福总会有到来的一天，但专属于青春的青涩悸动，却将再也无缘。这是青春唯一的遗憾，这是青春最大的遗憾。</li></ul></li></ul><h2 id="六月"><a href="#六月" class="headerlink" title="六月"></a>六月</h2><h3 id="《丑陋的中国人》"><a href="#《丑陋的中国人》" class="headerlink" title="《丑陋的中国人》"></a>《丑陋的中国人》</h3><ul><li><strong>作者：</strong> 柏杨</li><li><p><strong>评价：</strong></p><ul><li>在剖析中国人的作品中，《丑陋的中国人》的观点是相对来说比较激进的。1984年9月24日，柏杨在美国爱荷华大学演讲《丑陋的中国人》，强烈批判中国人的“脏、乱、吵”、“窝里斗”以及“不能团结”等，并将原因归结到“中国传统文化中有一种滤过性病毒，使我们的子孙受到了感染，到今天都不能痊愈”。书中讲的许多陋习，确实到现在也还在每个人的身边发生。文化中附庸的脏东西连根带骨，不是说去就能去掉的。但是我们能看到每一代人的进步，从1984柏杨先生的演讲到现在，已经过去了34年。这34年中，70后主导了改革开放的初步历程，将无数个家庭从饥饿中拯救出来，仓廪实而知礼节，先吃饱了肚子才能想着提高生活质量，“脏、乱、吵”的问题在城市中已经大为缓解；现如今，被70后称为“垮掉的一代”的80后已经成为了社会的顶梁柱，他们办事注重效率，不再一味地逢迎领导，随着工作节奏的加快，他们懂得团队合作的重要性。到了2018年，被80后称作“脑残的一代”的最小的90后也已经成年了，90后逐渐进入社会，开始接管建设社会的重担，他们出生在不必担心被饿死的时代，接受了至少9年的义务教育，在公共场合，他们大多不会哄抢、拥挤、随地吐痰，他们懂得如何尊重别人，也拥有让别人尊重的实力。我们用了30年的时间，从百年内备受欺辱积贫积弱的历史中走了出来，也完全有理由相信，只要给我们时间，即使是5000年的文化陋习，我们也可以将它们扫入历史的尘埃。为什么我的眼中常含泪水，因为我对这土地爱得深沉，柏杨先生愤怒的呼喊，一如鲁迅先生对国人“怒其不争”的期待。希望如今我们每一代人为变革所做的努力，足以让先生们在九泉之下露出鼓励的微笑吧。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;四月&quot;&gt;&lt;a href=&quot;#四月&quot; class=&quot;headerlink&quot; title=&quot;四月&quot;&gt;&lt;/a&gt;四月&lt;/h2&gt;&lt;h3 id=&quot;《七日谈：来自民间的中日对话录》&quot;&gt;&lt;a href=&quot;#《七日谈：来自民间的中日对话录》&quot; class=&quot;headerlink&quot; title=&quot;《七日谈：来自民间的中日对话录》&quot;&gt;&lt;/a&gt;《七日谈：来自民间的中日对话录》&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;作者：&lt;/strong&gt; (中)山奇 (日)加藤嘉一&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;评价：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;副标题是“来自民间的中日对话录”，首先它确实很“民间”，像两个国家的朋友之间的聊天，内容挺丰富，缺点是不深刻，很多问题虽然有提及，但也都是浮于表面。可以作为消遣。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://qiu-ye.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="阅读" scheme="https://qiu-ye.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>2017年阅读书单（一）</title>
    <link href="https://qiu-ye.github.io/2017/12/30/2017%E5%B9%B4%E9%98%85%E8%AF%BB%E4%B9%A6%E5%8D%95(%E4%B8%80)/"/>
    <id>https://qiu-ye.github.io/2017/12/30/2017年阅读书单(一)/</id>
    <published>2017-12-30T12:50:57.000Z</published>
    <updated>2018-02-28T11:14:13.719Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一月"><a href="#一月" class="headerlink" title="一月"></a>一月</h2><h3 id="《亲密关系》"><a href="#《亲密关系》" class="headerlink" title="《亲密关系》"></a>《亲密关系》</h3><ul><li><strong>作者：</strong> 罗兰·米勒（Rowland S Miller）、丹尼尔·珀尔曼（Daniel Perlman）等</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>矮个男子只有赚更多的钱（多得多的钱）才能得到与高个男子一样多的回应。(指女孩子的回应)</li><li>女性还喜欢聪明的男性。</li><li>文化差异表现在方方面面，但世界各地的人对于美丑的评判仍趋向一致，婴儿天生就偏爱那些同样能吸引成人的面孔。</li><li>对未来伴侣的期望值 ＝ 伴侣的长相吸引力 × 伴侣接纳自己的可能性</li><li>被人接纳和拒绝的经历教会我们在接近新的恋爱对象时所应有的期望。</li><li>一味的故作清高没有什么用，真正有用的是选择性的故作清高——也就是说，除了你想吸引的人之外，任何人想要得到你都是可望而不可即的。那些能付出代价拒绝大多数人却又能高兴地接纳我们的人，才是最有吸引力的未来伴侣。</li><li>如果我们获悉某人和我们一样厌恶其他人，我们就倾向于喜欢与我们态度一致的人。</li></ul></blockquote><blockquote><ul><li>在评价未来的伴侣时，男人往往首先确保女友至少有普通的长相，然后再来寻找尽可能多的热情、友善、诚实、坦率、稳定、幽默和智慧等等特征。绝世容貌是男人所渴求的，但不如高水平的热情和忠诚重要（社会地位和经济资源屈居第三位）。女人往往首先确保男友至少有点金钱和前途，然后再来寻找尽可能多的热情、友善、诚实、坦率、稳定、幽默和智慧等等特征。金钱与财富是女人渴求的，但不如高水平的热情和忠诚重要，长相排在第三位。</li><li>男人专注于长相，女人专注于资源，但人人似乎都期望伴侣友善、随和、可爱和亲切，男人和女人在这方面没什么差别。只要女伴姿色中等，只要男伴金钱足够，两性都想尽可能得到更多的热情和忠诚。</li></ul></blockquote><blockquote><ul><li>当碰到刚刚失去挚爱亲人而痛苦的人时该说些什么来表达同情和支持，很简单，试试“我很抱歉”或者“为你感到悲痛”，然后打住。不要用展望乐观的未来来安慰丧亲者。不要暗示亲人的死并不是最悲惨、最可怕的那种类型。也不要就所谓的化悲痛为力量提供详细建议。这些做法可能出自好意，但他们最终会侮辱丧亲者正在遭受的痛苦。只要表达衷心的同情就可以了。点头致意，耐心倾听，不要判断评价。</li></ul></blockquote></li></ul><a id="more"></a><ul><li><strong>评价：</strong><ul><li>这是一部相当经典的社会心理学译著，作为2017年啃下来的第一本大部头，我承认部分内容是有些扎心的。基于大量实验数据得出的结论，刷新了自己的很多观念。总体来说是一部相当不错的社会心理学入门书，不过单身狗们还是不要想着把它作为找女朋友的理论指导了，因为…亲身证明…理论再扎实…指导不了实践…似乎也并没有什么XX用。</li></ul></li></ul><h3 id="《李鸿章传》"><a href="#《李鸿章传》" class="headerlink" title="《李鸿章传》"></a>《李鸿章传》</h3><ul><li><strong>作者：</strong> 梁启超</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>天下惟庸人无咎无誉。</li><li>故誉满天下，未必不为乡愿；谤满天下，未必不为伟人。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>和许多人一样，我也是因为看了《走向共和》才想着更进一步了解李鸿章的。很小的时候听家里的长辈提起过李鸿章，说他是卖国贼，“宰相合肥天下瘦”评语传的是天下皆知。后来历史课本上说他是清末”洋务运动“的代表人，虽没有明着批判，但也是泼的冷水比赞扬多。直至看到《走向共和》，这部讲述清末风云际会的历史剧中李鸿章竟仿佛成了整个帝国的灵魂人物，鞠躬尽瘁扶大厦将倾。这前前后后差距巨大的评价重新勾起了我对李中堂的兴趣，梁启超的《李鸿章传》是公认的最中肯的李鸿章传记，讲述了李的传奇一生。最喜欢其篇首语”天下惟庸人无咎无誉“，读来有一种沉甸甸的历史感。对于那些历史节点上的关键人物，其千秋功过，自留有后人评说。不同阶段对李鸿章的认识差距如此之大，读史使人明智，不外乎如是。</li></ul></li></ul><h2 id="二月"><a href="#二月" class="headerlink" title="二月"></a>二月</h2><h3 id="《上海堡垒》"><a href="#《上海堡垒》" class="headerlink" title="《上海堡垒》"></a>《上海堡垒》</h3><ul><li><strong>作者：</strong> 江南</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>“我今天有飞行训练，回来晚了，你不在了。明儿我们去卡拉OK，你去不去？”我写了条短信发个林澜。</li><li>“我明天有事啊，晚上没空，唱歌我就不去了。”</li><li>我心里那个雀跃了一阵子的小野兽”呀唔”了一声，钻了回去。</li></ul></blockquote><blockquote><ul><li>林澜沉默了几秒钟：“我是有事……我在智慧泉广场那边和建南吃饭。”</li><li>我愣了一下，感觉到心里的小野兽低低地叫了一声，垂头丧气地钻回了它的小地洞里，越钻越深，沉沉地坠了下去。</li><li>“好啊，新镇江吧。”于是我心里的小野兽开心地跳起舞来，爬上树去钻下洞去，露出它的小尾巴。</li></ul></blockquote><blockquote><ul><li>我从他的眼神里面大概明白了，打亮手机，显示是：“您有一条短信来自　林澜。”</li><li>那只小野兽又欢欢喜喜跳了出来，翻着筋斗窜上窜下，它每次都是这个德性，半点耐性也没有。</li></ul></blockquote><blockquote><ul><li>我看见那只小野兽的背影了。它扛着它的小包袱走在苜蓿盛开的小路上，渐行渐远，就这么分别吧，不要回头，不要让我看见那个小东西沮丧的脸。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>每个暗恋的男孩心里都有一只小野兽，它总是时而欢呼雀跃，时而垂头丧气，最终要么在一句”我愿意“中，淹死在幸福的海洋里；或者，渐渐地再也不曾欢喜的跳起，慢慢地，在沮丧中死去。献给所有猫一样的女孩和小野兽。</li></ul></li></ul><h3 id="《天才在左，疯子在右》"><a href="#《天才在左，疯子在右》" class="headerlink" title="《天才在左，疯子在右》"></a>《天才在左，疯子在右》</h3><ul><li><strong>作者：</strong> 高铭</li><li><p><strong>评价：</strong></p><ul><li>一部出色的”科幻小说“。披着纪实文学的外衣，讲述了许多脑洞大开的故事。尤其是些逻辑自洽的小概念，读来甚是有趣，开拓思维即可，只是不要当真。</li></ul></li></ul><h3 id="《呼兰河传》"><a href="#《呼兰河传》" class="headerlink" title="《呼兰河传》"></a>《呼兰河传》</h3><ul><li><strong>作者：</strong> 萧红</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>请神的人家为了治病，可不知那家的病人好了没有？却使邻居街坊感慨兴叹，终夜而不能已的也常常有。满天星光，满屋月亮，人生何如，为什么这么悲凉。</li></ul></blockquote><blockquote><ul><li>逆来顺受，你说我的生命可惜，我自己却不在乎。你看着很危险，我却自己以为得意。不得意怎么样？人生是苦多乐少。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>读了《呼兰河传》，才重新想起来小学四年级语文课本里《火烧云》那篇文章居然出自这本书。那些生、老、病、死，世事轮回，都以一个孩子的视角展开，将那些血淋淋的痛藏在孩子水灵灵的瞳孔后面，最终弱化成彻头彻尾的凉。鲁迅先生曾斥过中国人，“哀其不幸，怒其不争”，可有些事情对于有些人来说，又哪有争的机会呢？只要能挣扎着活着，不得意又怎么样？人生总归是苦多乐少。但哪怕像沉醉在火烧云中这种微小的幸福，也是值得期待的，不是吗？</li></ul></li></ul><h3 id="《中国历代政治得失》"><a href="#《中国历代政治得失》" class="headerlink" title="《中国历代政治得失》"></a>《中国历代政治得失》</h3><ul><li><strong>作者：</strong> 钱穆</li><li><p><strong>书摘：</strong></p><blockquote><ul><li><strong>汉：</strong> 但中国政权，却因此开放给全国各地了。从此以后，无论选举或考试，都是区分定额的。经济文化落后的地区和经济文化进步的地区，都一样照人口比例来考选。因此中央政府里，永远有全国各地域人民之参加，不致偏荣偏枯。因此中国政府，始终是代表着全国性的，全国人民都有跑进政府的希望。而且实际上，也是全国各地永远都有人跑进中央政府的。又汉制郡县长官，例需避用本郡本县人，如是则中央政府既是绝对的代表全国性的，而地方政府却又竭力避免其陷于地方性。这样才可使大一统的局面，永远维持。而全国各地方声教相通，风气相移，却可使各地文化经济水准，永远走向融合，走向平均，不致隔绝，不致分离。这一制度，自汉代起直至清代始终沿用。这是中国传统政治制度里最应着眼之点。</li></ul></blockquote><blockquote><ul><li><strong>唐：</strong> 中国政治上的传统观念，对一意见之从违抉择，往往并不取决于多数，如西方所谓之民族精神。而中国人传统，则常求取决于贤人。春秋时即有“贤均从众”之说（见《左传》）。哪一人贤，就采纳哪一人的意见，假若双方均贤，则再来取决于多数。贤属质，众属量，中国传统重质不重量。中国人认为只要其人是贤者，就能够代表多数。不贤而仅凭数量，是无足轻重的。</li><li>制度的背后，都应有理论和思想，一切制度，决不会凭空无端地产生。</li></ul></blockquote><blockquote><ul><li><strong>宋：</strong> 所谓宋代的中央集权，是军权集中，财权集中，而地方则日趋贫弱。至于用人集中，则在唐代早已实行了。为其地方贫弱，所以金兵内侵，只中央首都一失，全国瓦解，更难抵抗。唐代安史之乱，其军力并不比金人弱，唐两京俱失，可是州郡财富厚，每一城池，都存有几年的米，军装武器都有储积，所以可以到处各自为战，还是有办法。宋代则把财富兵力都集中到中央，不留一点在地方上，所以中央一失败，全国土崩瓦解，再也没办法。</li></ul></blockquote><blockquote><ul><li><strong>明：</strong> 当时的政治传统重法不重人。只要你在胥吏流品中，无论如何有才有德，也仍走不出胥吏之本流，仍还是一个胥吏。所以胥吏不再要自爱，不再要向上。而一切文书簿籍，案例掌故，却全经他们手。他们便操纵这些来束缚他们的长官。长官虽贤明，无奈他们何。此乃法病，非人病。现代一般人，都说中国人不讲法，其实中国政治的传统毛病，就在太讲法，什么事都依法办。一条条文进出，一个字两个字，往往上下往复，把紧要公事都停顿了。胥吏政治之又一面，便是今天所谓的文书政治。这是中国传统政治里的尚文之弊。</li></ul></blockquote><blockquote><ul><li><strong>清：</strong> 我们讲政治制度，有一些确实是制度，有一些这只能叫做事件或法术。制度指政而言，法术只是些事情或手段，不好说是政治。大抵制度是出之于公的，在公的用心下形成的一些度量分寸是制度。而法术则出之于私，因此没有一定恰好的节限。</li><li>再说中国历代政治制度究竟是出于公的多呢？还是出于私的多？究竟法术的意义重呢？还是制度的意义重？论汉代，西汉可以说是制度，东汉则多半出于光武的私心。论唐代，确实可说在建立制度，而宋代则有许多只算是一种法术。明代，有许多只能说它是一些事，不能说它是一些制。尤其是清代，可说全没有制度。它所有的制度，都是根据着明代，而在明代的制度里，再加上他们许多的私心。这种私心，可说是一种“部族政权”的私心，一切由满洲部族的私心出发，所以全只有法术，更不见制度。</li><li>私心绝不能形成制度。</li><li>任何一个独裁者，都有拥护他独裁的一个特定的集团。</li><li>中国传统政治，若说凭技术，也已有两千年的经验，但有它可宝贵的地方。最可宝贵处，就是在公开。一切事情都是公开的。因为有一制度存在，一切凭制度处置，要不公开也不可能。（ 寄信上谕，秘密传旨，六部之中尚书侍郎都可以单独面奏，只有个人没有机关，封闭言路，禁止民间公开发言权。）这成什么制度呢？这只是满洲部族政权便利他们统治中国的一些无理的法术。</li><li>私心的制度，即便是法术。法术是专讲手段，不论意义的。若说法术有意义，则只是些私意义。</li><li>他们一面在怀柔藩属，压迫中国。一面在羁縻中国知识分子来减轻抵抗。又一面是压迫知识分子而讨好下层民众。这三方面用心，可谓是很周到的。康熙、雍正，也都是很能干的皇帝，经他们统治，中国无言论自由，也没有结社出版自由，而且不断有十分可怕的文字狱。这种种压迫，而知识分子无法违抗。</li><li>清代人想讨好民众，这打算并不坏。但他们又存心压迫知识分子。他们只需要有服服帖帖的官，不许有正正大大的人。结果造成了政治上的奴性、平庸、敷衍、腐败、没精神。政治腐败了，纵向讨好民众，民众也得不到实惠。</li><li>若太平天国成功了，便是全部中国历史失败了。当时的洪杨，并不是推不翻满清，但他们同时又要推翻中国全部历史，所以他们只可有失败。近代的中国人，正也想把中国全部历史推翻了，所以更多对太平天国报同情。</li></ul></blockquote><blockquote><ul><li><strong>总结：</strong> 我们天天说我们的法不够，其实不够的不在法，而在才。这也不是我们之无才，乃是我们的才，不能在我们的法里真有所表现。一个时代，总有一个时代的人才，也总有一个时代的法制。人才无可表现，于是有大乱。若专用法制来束缚人，使人人不获尽其才，这必将会酿乱。我们现在将如何酌采西方的新潮流，如何拿自己以前的旧经验，来替自己打开一出路，来创新法，运新才，这当然是我们这一代的责任。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>这一本薄薄的小书仅有100多页，但我认为这是2017年我看过的最好的书。读书的过程中，我满满记下6页A4纸的笔记。钱穆先生的演讲从制度的角度分析了汉唐宋元明清历代的成败得失，虽然内容不多，不过每句话都信息量巨大。知识结构中许多关于中国历史政治中不清晰的地方，在钱穆先生的讲解下，都有了新的理解。以此为契机，像串糖葫芦一样，把中国历史在脑海中过了一遍，温故而知新，阅读体验极佳。五星推荐。</li></ul></li></ul><h2 id="三月"><a href="#三月" class="headerlink" title="三月"></a>三月</h2><h3 id="《孤独小说家》"><a href="#《孤独小说家》" class="headerlink" title="《孤独小说家》"></a>《孤独小说家》</h3><ul><li><strong>作者：</strong> 石田衣良</li><li><p><strong>评价：</strong></p><ul><li>一个坚持写作十年的小说家爸爸和他儿子的故事。梦想一旦付诸行动，就会变得神圣。最黑暗、最绝望的时候，正是你离梦想最近的时候。你只需要再站起来一次。</li></ul></li></ul><h3 id="《三生三世十里桃花》"><a href="#《三生三世十里桃花》" class="headerlink" title="《三生三世十里桃花》"></a>《三生三世十里桃花》</h3><ul><li><strong>作者：</strong> 唐七公子</li><li><p><strong>评价：</strong></p><ul><li>呵呵呵呵呵，果然流行文学大多数是垃圾，如果你肯把它冠以“文学作品”的话。</li></ul></li></ul><h3 id="《枪林弹雨中成长》"><a href="#《枪林弹雨中成长》" class="headerlink" title="《枪林弹雨中成长》"></a>《枪林弹雨中成长》</h3><ul><li><strong>作者：</strong> 田涛</li><li><p><strong>评价：</strong></p><ul><li>借用豆瓣评论上的一句评价，这类书属于职业体验分享式鸡血书，哈哈，很形象。华为能做大做强，和这些能吃苦耐劳的员工的付出是分不开的。高付出高回报在华为这里体现的淋漓尽致。仍记得一个华为高管在学校宣讲会上，回应如何平衡工作与家庭这个问题时，隐隐透漏出的小心酸。抱起砖头就没法抱你,放下砖头就没法养你。可以说是非常精辟了。</li></ul></li></ul><h3 id="《摆渡人》"><a href="#《摆渡人》" class="headerlink" title="《摆渡人》"></a>《摆渡人》</h3><ul><li><strong>作者：</strong> 克莱儿·麦克福尔</li><li><p><strong>评价：</strong></p><ul><li>这本书绝对是出版物营销的典型成功之作。至于其内容，就很一般了。久闻这本书的高评价，上手的时候是满怀期待的，然而越看越无聊，一直想弃，可一考虑到腰封上的评语，想着结局没准会有亮点，就硬着头皮看下去了。越往后看越着急，说好的高潮呢？反转呢？治愈呢？The end … F×××，这就完了？？？最多6分，不能再多了。</li></ul></li></ul><h3 id="《春风沉醉的夜晚》"><a href="#《春风沉醉的夜晚》" class="headerlink" title="《春风沉醉的夜晚》"></a>《春风沉醉的夜晚》</h3><ul><li><strong>作者：</strong> 郁达夫</li><li><p><strong>书摘：</strong></p><blockquote><ul><li>“你家在什么地方？何以不回家去？”</li><li>她问到了这里，我忽而感觉到我自己的现状了。因为自去年以来，我只是一日一日的萎靡下去，差不多把“我是什么人？”“我现在所处的是怎么一种境遇？”“我的心里还 是悲还是喜？”这些观念都忘掉了。经她这一问，我重新把半年来困苦的情形一层一层的想了出来。所以听她的问话以后，我只是呆呆的看她，半晌说不出话来。她看了我这个样 子，以为我也是一个无家可归的流浪人。脸上就立时起了一种孤寂的表情，微微的叹着说：</li><li>“唉！你也是同我一样的么？”</li><li>微微的叹了一声之后，她就不说话了。</li></ul></blockquote></li><li><p><strong>评价：</strong></p><ul><li>同是天涯沦落人，相逢何必曾相识。</li></ul></li></ul><h3 id="《阿弥陀佛么么哒》"><a href="#《阿弥陀佛么么哒》" class="headerlink" title="《阿弥陀佛么么哒》"></a>《阿弥陀佛么么哒》</h3><ul><li><strong>作者：</strong> 大冰</li><li><p><strong>评价：</strong></p><ul><li>第一本也是最后一本大冰的书，不是我的菜。总感觉他的故事飘在空中，落不到实处，也让人找不到共鸣。多半是我等烟火气太重了吧，哈哈。</li></ul></li></ul><h3 id="《编程之道》"><a href="#《编程之道》" class="headerlink" title="《编程之道》"></a>《编程之道》</h3><ul><li><strong>作者：</strong> Geoffrey James</li><li><p><strong>评价：</strong></p><ul><li>很有趣的一本书。有人说它是一本形而上的编程书。作者运用东方的哲学思想进行深层次的思考和理解编程艺术。可以当做程序员优雅装逼指南。^_^</li></ul></li></ul><h3 id="《追风筝的人》"><a href="#《追风筝的人》" class="headerlink" title="《追风筝的人》"></a>《追风筝的人》</h3><ul><li><strong>作者：</strong> 卡勒德·胡赛尼</li><li><p><strong>评价：</strong></p><ul><li>还好不是《摆渡人》这种华而不实的作品。大多数人对阿富汗的印象是很陌生的，往往仅停留在新闻联播的程度，战乱四起，民不聊生。胡赛尼将故国人民遭受的苦难以及善良和坚强通过小说的形式描绘出来。故事是残忍而美丽的，关乎人性关乎救赎，是本感动人心的好书。</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一月&quot;&gt;&lt;a href=&quot;#一月&quot; class=&quot;headerlink&quot; title=&quot;一月&quot;&gt;&lt;/a&gt;一月&lt;/h2&gt;&lt;h3 id=&quot;《亲密关系》&quot;&gt;&lt;a href=&quot;#《亲密关系》&quot; class=&quot;headerlink&quot; title=&quot;《亲密关系》&quot;&gt;&lt;/a&gt;《亲密关系》&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;作者：&lt;/strong&gt; 罗兰·米勒（Rowland S Miller）、丹尼尔·珀尔曼（Daniel Perlman）等&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;书摘：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;矮个男子只有赚更多的钱（多得多的钱）才能得到与高个男子一样多的回应。(指女孩子的回应)&lt;/li&gt;
&lt;li&gt;女性还喜欢聪明的男性。&lt;/li&gt;
&lt;li&gt;文化差异表现在方方面面，但世界各地的人对于美丑的评判仍趋向一致，婴儿天生就偏爱那些同样能吸引成人的面孔。&lt;/li&gt;
&lt;li&gt;对未来伴侣的期望值 ＝ 伴侣的长相吸引力 × 伴侣接纳自己的可能性&lt;/li&gt;
&lt;li&gt;被人接纳和拒绝的经历教会我们在接近新的恋爱对象时所应有的期望。&lt;/li&gt;
&lt;li&gt;一味的故作清高没有什么用，真正有用的是选择性的故作清高——也就是说，除了你想吸引的人之外，任何人想要得到你都是可望而不可即的。那些能付出代价拒绝大多数人却又能高兴地接纳我们的人，才是最有吸引力的未来伴侣。&lt;/li&gt;
&lt;li&gt;如果我们获悉某人和我们一样厌恶其他人，我们就倾向于喜欢与我们态度一致的人。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在评价未来的伴侣时，男人往往首先确保女友至少有普通的长相，然后再来寻找尽可能多的热情、友善、诚实、坦率、稳定、幽默和智慧等等特征。绝世容貌是男人所渴求的，但不如高水平的热情和忠诚重要（社会地位和经济资源屈居第三位）。女人往往首先确保男友至少有点金钱和前途，然后再来寻找尽可能多的热情、友善、诚实、坦率、稳定、幽默和智慧等等特征。金钱与财富是女人渴求的，但不如高水平的热情和忠诚重要，长相排在第三位。&lt;/li&gt;
&lt;li&gt;男人专注于长相，女人专注于资源，但人人似乎都期望伴侣友善、随和、可爱和亲切，男人和女人在这方面没什么差别。只要女伴姿色中等，只要男伴金钱足够，两性都想尽可能得到更多的热情和忠诚。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;当碰到刚刚失去挚爱亲人而痛苦的人时该说些什么来表达同情和支持，很简单，试试“我很抱歉”或者“为你感到悲痛”，然后打住。不要用展望乐观的未来来安慰丧亲者。不要暗示亲人的死并不是最悲惨、最可怕的那种类型。也不要就所谓的化悲痛为力量提供详细建议。这些做法可能出自好意，但他们最终会侮辱丧亲者正在遭受的痛苦。只要表达衷心的同情就可以了。点头致意，耐心倾听，不要判断评价。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="随笔" scheme="https://qiu-ye.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="阅读" scheme="https://qiu-ye.github.io/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
</feed>
